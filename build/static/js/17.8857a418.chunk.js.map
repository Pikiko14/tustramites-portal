{"version":3,"sources":["components/layout/components/NewProcedure.jsx","components/table/DataTable.js","components/table/ActionTable.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EyeOutlined.js","pages/notary/components/NotaryDialog.js","pages/notary/notary.page.js"],"names":["NewProcedure","_ref","title","_jsxs","className","children","_jsx","MoreIcon","Notifications","DataTable","columns","data","pagination","Table","dataSource","ActionTable","handleSee","handleEdit","handleDelete","Space","size","onClick","EyeOutlined","EditOutlined","DeleteOutlined","props","ref","React","AntdIcon","_objectSpread","icon","EditOutlinedSvg","RefIcon","EyeOutlinedSvg","NotaryDialog","notary","setData","callback","form","Form","useForm","cities","setCities","useState","TextArea","Input","handleOk","useEffect","resetFields","schedule","schedules","forEach","item","days","setDays","startHour","endHour","name","contact","address","email","phone","province","city","sector","setFieldsValue","Modal","open","onOk","onCancel","forceRender","maskClosable","footer","Button","type","layout","Item","label","id","disabled","Notary","listNotaries","setListNotaries","notaryDialog","setNotaryDialog","setNotary","loader","setLoader","dataIndex","key","render","text","record","getNotaries","async","response","HttpClient","get","status","setTimeout","_Fragment","callbackNotary","Layout","classNameMain","position"],"mappings":"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","file":"static/js/17.8857a418.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MoreIcon } from '../../icons/Icons'\r\nimport Notifications from './Notifications'\r\n\r\nconst NewProcedure = ({ title = 'Nuevo TrÃ¡mite' }) => {\r\n  return (\r\n    <div className=\"content-add-tramite\">\r\n      <div className=\"button-nuevo-tramite\">\r\n        <div className=\"centrarVerHor\">\r\n          <MoreIcon />\r\n          <span>{title}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"input-tramite\">\r\n        <div className=\"notificacion-movil\">\r\n          <Notifications />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewProcedure\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nconst DataTable = ({ columns, data, pagination }) => {\r\n  return <Table columns={columns} dataSource={data} pagination={pagination} />\r\n}\r\n\r\nexport default DataTable\r\n","import React from 'react'\r\nimport { Space } from 'antd'\r\n\r\n// ICON\r\nimport { EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons'\r\n\r\nconst ActionTable = ({ handleSee, handleEdit, handleDelete }) => {\r\n  return (\r\n    <Space size=\"middle\">\r\n      {handleSee ? (\r\n        <span className=\"action-edit\" onClick={handleSee}>\r\n          <EyeOutlined />\r\n          Ver\r\n        </span>\r\n      ) : null}\r\n      {handleEdit ? (\r\n        <span className=\"action-edit\" onClick={handleEdit}>\r\n          <EditOutlined />\r\n          Editar\r\n        </span>\r\n      ) : null}\r\n      {handleDelete ? (\r\n        <span className=\"action-edit\" onClick={handleDelete}>\r\n          <DeleteOutlined />\r\n          Eliminar\r\n        </span>\r\n      ) : null}\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default ActionTable\r\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(EditOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'EditOutlined';\n}\nexport default RefIcon;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EyeOutlined = function EyeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(EyeOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'EyeOutlined';\n}\nexport default RefIcon;","import React, { useState, useEffect } from 'react'\r\nimport { InputNumber, Modal, Form, Input, Button, Select } from 'antd'\r\n\r\n// RESOURCE\r\nimport json_location from '../../../json/states-cities.json'\r\nimport './scss/NotaryDialog.scss'\r\n\r\n\r\nconst NotaryDialog = ({ notary, data, setData, callback }) => {\r\n  const [form] = Form.useForm()\r\n  const [cities, setCities] = useState([])\r\n  const { TextArea } = Input\r\n\r\n  const handleOk = () => {\r\n    setData(null)\r\n    callback()\r\n  }\r\n\r\n  const handleChangeProvince = (value) => {\r\n    const state = json_location.find((x) => x.state == value)\r\n    setCities(state.cities)\r\n  }\r\n\r\n  const setDays = (item) => {\r\n    let days = ''\r\n    if (item.days == 'lunes-martes-miercoles-jueves-viernes-sabado') {\r\n      days = 'Lun - Sab'\r\n    } else if (item.days == 'lunes-martes-miercoles-jueves-viernes-') {\r\n      days = 'Lun - Vie'\r\n    } else if (item.days == 'lunes-martes-miercoles-jueves-') {\r\n      days = 'Lun - Jue'\r\n    } else if (item.days == 'lunes-martes-miercoles-') {\r\n      days = 'Lun - Mie'\r\n    } else if (item.days == 'lunes-martes-') {\r\n      days = 'Lun - Mar'\r\n    } else if (item.days == 'lunes') {\r\n      days = 'Lun'\r\n    } else if (item.days == 'lunes-miercoles-viernes-') {\r\n      days = 'Lun - Mie- Vie'\r\n    } else if (item.days == 'martes-jueves-sabado-') {\r\n      days = 'Mar - Jue- Sab'\r\n    } else if (item.days == 'martes-jueves-') {\r\n      days = 'Mar - Jue'\r\n    }\r\n    return days\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n    if (notary) {\r\n      let schedule = ''\r\n      notary.schedule.schedules.forEach((item) => {\r\n        schedule += setDays(item) + ' ' + item.startHour + ' - ' + item.endHour + '\\n'\r\n      })\r\n\r\n      let data = {\r\n        name: notary.name,\r\n        contact: notary.contact,\r\n        address: notary.address,\r\n        email: notary.email,\r\n        phone: notary.phone,\r\n        province: notary.province,\r\n        city: notary.city,\r\n        sector: notary.sector,\r\n        schedule: schedule\r\n      }\r\n      form.setFieldsValue(data)\r\n    }\r\n  }, [notary, data])\r\n\r\n  return (\r\n    <Modal\r\n      open={data}\r\n      onOk={handleOk}\r\n      onCancel={handleOk}\r\n      forceRender\r\n      maskClosable={false}\r\n      footer={[\r\n        <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          Aceptar\r\n        </Button>\r\n      ]}\r\n    >\r\n      <h3>InformaciÃ³n de la NotarÃ­a</h3>\r\n      <Form layout=\"vertical\" form={form}>\r\n        <div className=\"form-control\">\r\n          <Form.Item\r\n            label=\"Nombre\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Contacto\"\r\n            name=\"contact\"\r\n            id=\"contact\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"DirecciÃ³n\"\r\n            name=\"address\"\r\n            id=\"address\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Correo\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"TelÃ©fono\"\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"province\"\r\n            id=\"province\"\r\n            label=\"Provincia\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"city\"\r\n            id=\"city\"\r\n            label=\"Ciudad\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"sector\"\r\n            id=\"sector\"\r\n            label=\"Sector\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Horario\"\r\n            name=\"schedule\"\r\n            id=\"schedule\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotaryDialog\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport HttpClient from '../../helpers/network/HttpClient'\r\n\r\n// COMPONENTS\r\nimport Layout from '../../components/layout/Layout'\r\nimport DataTable from '../../components/table/DataTable'\r\nimport ActionTable from '../../components/table/ActionTable'\r\nimport NotaryDialog from './components/NotaryDialog'\r\nimport '../procedurenotarial/scss/procedurenotarial.page.scss'\r\nimport NewProcedure from '../../components/layout/components/NewProcedure'\r\n\r\nconst Notary = () => {\r\n    const [listNotaries, setListNotaries] = useState([])\r\n    const [notaryDialog, setNotaryDialog] = useState()\r\n    const [notary, setNotary] = useState()\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Nombre',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: text => <span>{text}</span>\r\n        },\r\n        {\r\n            title: 'Contacto',\r\n            dataIndex: 'contact',\r\n            key: 'contact',\r\n            render: text => <span>{text}</span>\r\n        },\r\n        {\r\n            title: 'DirecciÃ³n',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            render: text => <span>{text}</span>\r\n        },\r\n        {\r\n            title: 'Correo',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            render: text => <span>{text}</span>\r\n        },\r\n        {\r\n            title: 'TelÃ©fono',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n            render: text => <span>{text}</span>\r\n        },\r\n        {\r\n            title: 'AcciÃ³n',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <ActionTable\r\n                    handleSee={() => handleSee(record)}\r\n                />\r\n            )\r\n        }\r\n    ]\r\n\r\n    const handleSee = (notary) => {\r\n        setNotary(notary)\r\n        setNotaryDialog({ notary })\r\n    }\r\n\r\n    const callbackNotary = () => {\r\n        getNotaries()\r\n        setNotaryDialog(null)\r\n    }\r\n\r\n    const getNotaries = async () => {\r\n        const response = await HttpClient.get('/api/notary')\r\n        if (response.status == 200) {\r\n            setListNotaries(response.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotaries()\r\n        setLoader(true)\r\n        setTimeout(() => {\r\n            setLoader(false)\r\n        }, 3000)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <NotaryDialog\r\n                notary={notary}\r\n                data={notaryDialog}\r\n                setData={setNotaryDialog}\r\n                callback={callbackNotary}\r\n            />\r\n            <Layout loader={loader} classNameMain=\"mainTable\">\r\n                <NewProcedure title='Notarias' />\r\n                <div className=\"header-page\">\r\n                    <h6>A continuaciÃ³n encontrarÃ¡s todos las NotarÃ­as</h6>\r\n\r\n                    <div className=\"main-card card\">\r\n                        <div className=\"main-card-table\">\r\n                            <DataTable\r\n                                columns={columns}\r\n                                data={listNotaries}\r\n                                pagination={{ position: ['bottomCenter'] }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Notary\r\n"],"sourceRoot":""}