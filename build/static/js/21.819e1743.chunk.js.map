{"version":3,"sources":["components/layout/components/NewProcedure.jsx","pages/documentresult/components/DocumentViewer.js","pages/documentresult/documentresult.page.js"],"names":["NewProcedure","_ref","title","_jsxs","className","children","_jsx","MoreIcon","Notifications","DocumentViewer","url","defaultLayoutPluginInstance","defaultLayoutPlugin","Worker","workerUrl","Viewer","characterMap","isCompressed","fileUrl","plugins","DocumentResult","props","notarialact","setNotarialact","useState","category","setCategory","message","setMessage","procedureNotarial","setProcedureNotarial","loader","setLoader","TextArea","Input","user","useContext","AuthContext","form","Form","useForm","loadCategory","id","HttpClient","get","then","res","data","useEffect","loadData","p","queryString","parse","location","search","notarialAct","date","setTimeout","_Fragment","Layout","hasHeaderProfile","classNameMain","Row","Col","span","name","first_name","last_name","process","REACT_APP_URL_API","document_result","layout","labelCol","wrapperCol","onFinish","values","observation_document_result","observation","state","put","_id","Alert","show","type","btnOk","fnOk","history","push","btnCancel","buttonX","catch","err","onFinishFailed","autoComplete","Item","label","hasFeedback","rows","placeholder","autoSize","minRows","maxRows","maxLength","showCount","Button","htmlType","onClick","getFieldValue"],"mappings":"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","file":"static/js/21.819e1743.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MoreIcon } from '../../icons/Icons'\r\nimport Notifications from './Notifications'\r\n\r\nconst NewProcedure = ({ title = 'Nuevo Trámite' }) => {\r\n  return (\r\n    <div className=\"content-add-tramite\">\r\n      <div className=\"button-nuevo-tramite\">\r\n        <div className=\"centrarVerHor\">\r\n          <MoreIcon />\r\n          <span>{title}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"input-tramite\">\r\n        <div className=\"notificacion-movil\">\r\n          <Notifications />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewProcedure\r\n","import React from 'react'\r\nimport { Viewer } from '@react-pdf-viewer/core'\r\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout'\r\nimport '@react-pdf-viewer/core/lib/styles/index.css'\r\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css'\r\nimport { Worker } from '@react-pdf-viewer/core'\r\n\r\nconst DocumentViewer = ({ url }) => {\r\n  const defaultLayoutPluginInstance = defaultLayoutPlugin()\r\n\r\n  const characterMap = {\r\n    isCompressed: true,\r\n    url: 'https://unpkg.com/pdfjs-dist@2.1.266/cmaps/'\r\n  }\r\n\r\n  return (\r\n    <Worker workerUrl='https://unpkg.com/pdfjs-dist@2.1.266/build/pdf.worker.min.js'>\r\n      <Viewer\r\n        characterMap={characterMap}\r\n        fileUrl={url||'/document.pdf'}\r\n        plugins={[\r\n          defaultLayoutPluginInstance\r\n        ]}\r\n      />\r\n    </Worker>\r\n  )\r\n}\r\n\r\nexport default DocumentViewer\r\n","import React, { useEffect, useState, useContext } from 'react'\r\n// CONTEXT\r\nimport AuthContext from '../../context/AuthContext'\r\n\r\nimport { Button, Input, Row, Col, Form } from 'antd'\r\nimport Alert from '../../helpers/alert/Alert'\r\nimport HttpClient from '../../helpers/network/HttpClient'\r\nimport queryString from 'query-string'\r\n\r\n// COMPONENTS\r\nimport Layout from '../../components/layout/Layout'\r\nimport DocumentViewer from './components/DocumentViewer'\r\nimport NewProcedure from '../../components/layout/components/NewProcedure'\r\nimport './scss/documentresult-step-seven.page.scss'\r\n\r\n\r\nconst DocumentResult = (props) => {\r\n  const [notarialact, setNotarialact] = useState()\r\n  const [category, setCategory] = useState()\r\n  const [message, setMessage] = useState()\r\n  const [procedureNotarial, setProcedureNotarial] = useState()\r\n  const [loader, setLoader] = useState(false)\r\n  const { TextArea } = Input\r\n  const { user } = useContext(AuthContext)\r\n  const [form] = Form.useForm()\r\n\r\n  const loadData = () => {\r\n    let { p } = queryString.parse(props.location.search)\r\n    if (p) {\r\n      HttpClient.get('/api/procedurenotarial/one/' + p).then((res) => {\r\n        setProcedureNotarial(res.data)\r\n        setNotarialact(res.data.notarialAct)\r\n        loadCategory(res.data.notarialAct.category)\r\n\r\n        if (res.data.notarialAct.date) {\r\n          let message =\r\n            `Gracias por revisar y darnos la aprobación del documento.\\n\\n Ahora puedes proceder a agendar tu cita preferencial en Notaría.`\r\n          setMessage(message)\r\n        } else {\r\n          let message =\r\n            `Gracias por revisar y darnos la aprobación del documento.\\n\\n Muy pronto nos estaremos comunicando contigo.`\r\n          setMessage(message)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const loadCategory = (id) => {\r\n    HttpClient.get('/api/category/' + id).then((res) => {\r\n      setCategory(res.data)\r\n    })\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    procedureNotarial.observation_document_result = values.observation\r\n    procedureNotarial.state = '10'\r\n\r\n    HttpClient.put('/api/procedurenotarial/' + procedureNotarial._id, procedureNotarial)\r\n      .then((res) => {\r\n        Alert.show({\r\n          type: 'warning',\r\n          title: 'Correcciones enviadas',\r\n          message:\r\n            user.first_name +\r\n            ` ` +\r\n            user.last_name +\r\n            ` gracias por revisar el documento y enviarnos las observaciones correspondientes.\r\n                    Revisaremos el documento y rápidamente realizaremos los ajustes pertinentes. Te estaremos informando para que ingreses nuevamente y puedas aprobarlo.`,\r\n          btnOk: 'Aceptar',\r\n          fnOk: () => {\r\n            props.history.push('/procedurenotarial')\r\n          },\r\n          btnCancel: 'Cancelar',\r\n          buttonX: true\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        Alert.show({\r\n          type: 'error',\r\n          title: 'Error inesperado',\r\n          message: 'Ocurrio un error inesperado, vuelve a intentar',\r\n          btnOk: 'Aceptar',\r\n          fnOk: () => { },\r\n          btnCancel: 'Cancelar',\r\n          buttonX: true\r\n        })\r\n      })\r\n  }\r\n\r\n  const saveData = () => {\r\n    if (form.getFieldValue('observation'))\r\n      procedureNotarial.observation_document_result = form.getFieldValue('observation')\r\n    procedureNotarial.state = '9'\r\n\r\n    HttpClient.put('/api/procedurenotarial/' + procedureNotarial._id, procedureNotarial)\r\n      .then((res) => {\r\n        Alert.show({\r\n          type: 'success',\r\n          title: '¡Genial '+ user.first_name + ' ' + user.last_name + '!',\r\n          message: message,\r\n          btnOk: 'Solicita tu cita',\r\n          fnOk: () => { props.history.push('/procedurenotarial')},\r\n          btnCancel: 'Cancelar',\r\n          buttonX: true\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        Alert.show({\r\n          type: 'error',\r\n          title: 'Error inesperado',\r\n          message: 'Ocurrio un error inesperado, vuelve a intentar',\r\n          btnOk: 'Solicita tu cita',\r\n          fnOk: () => { },\r\n          btnCancel: 'Cancelar',\r\n          buttonX: true\r\n        })\r\n      })\r\n  }\r\n\r\n  const onFinishFailed = () => {\r\n    Alert.show({\r\n      type: 'error',\r\n      title: 'Diligencia adecuadamente el formulario',\r\n      message: `Para enviar la corrección debes ingresar las observaciones detectadas en el documento.`,\r\n      btnOk: 'Aceptar',\r\n      fnOk: () => { },\r\n      btnCancel: 'Cancelar',          \r\n      buttonX: true\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData()\r\n    setTimeout(() => {\r\n      setLoader(false)\r\n    }, 1000)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Layout \r\n        loader={loader}   \r\n        hasHeaderProfile={true}\r\n        classNameMain=\"notarialStepSeven\"\r\n      >\r\n      <NewProcedure />\r\n      {notarialact ? (\r\n                <>\r\n        <Row className=\"containerProcedure-info\">\r\n          <Col span={23} className=\"categories\">\r\n            <h3 className=\"title-indicaciones\">{category && category.name + ' /'}</h3>\r\n            <div className=\"line-morado\"> </div>\r\n            <h2 className=\"title-indicaciones\">{notarialact && notarialact.name}</h2>\r\n            <div className=\"diplayflex\">\r\n              <div className=\"content-circule\">\r\n                <div className=\"circule-notaria\">\r\n                  <span className=\"circule-number\"></span>\r\n                </div>\r\n              </div>\r\n              <h2 className=\"titleIngresarInfo\">Revisar el borrador</h2>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={2}></Col>\r\n          <Col span={20}>\r\n            <p className=\"containerDescription-description\">\r\n              {user.first_name +\r\n                ' ' +\r\n                user.last_name +\r\n                `, por favor lee cuidadosamente el borrador del documento final que hemos creado para tu trámite. Revisa que todos los datos estén correctos (nombres, números de identificación, ciudades, etc).\\n\\n\r\n                        Si todo está perfecto, presiona el botón `}<b>Aprobar</b>{`. Pero si encuentras algún dato que deba ser corregido, por favor menciónalo en el campo de observaciones, acompañado del número de línea que se encuentra a la izquierda del documento y presiona el botón `}<b>Corregir</b>{`.`}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n        <Row>\r\n          <Col span={2}></Col>\r\n          <Col span={16}>\r\n            {procedureNotarial && (\r\n              <DocumentViewer\r\n                url={\r\n                  process.env.REACT_APP_URL_API +\r\n                  '/api/storage?url=' +\r\n                  procedureNotarial.document_result +\r\n                  '&type=0&access=1'\r\n                }\r\n              />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Form\r\n          name=\"basic\"\r\n          layout=\"vertical\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 24 }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n          form={form}\r\n        >\r\n          <Row>\r\n              <Form.Item\r\n                label=\"Observación\"\r\n                name=\"observation\"\r\n                id=\"observation\"\r\n                className=\"containerObservation\"\r\n                hasFeedback\r\n                 /*rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'La descripción es requerida'\r\n                  },\r\n                  {\r\n                    min: 5,\r\n                    message: 'La descripción debe tener al menos 5 caracteres!'\r\n                  }\r\n                ]}*/\r\n              >\r\n                 <TextArea\r\n                  className=\"textArea\"\r\n                  rows={4}\r\n                  placeholder=\"Ingresa tu observación.\"\r\n                  autoSize={{ minRows: 3, maxRows: 5 }}\r\n                  maxLength={1000}\r\n                  showCount={true}\r\n                />\r\n              </Form.Item>\r\n          </Row>\r\n          <Row className=\"containerContinue\">\r\n              <div className=\"containerButtonFinished\">\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"btnSave\">\r\n                    Corregir\r\n                  </Button>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"button\"\r\n                    className=\"btnContinuar\"\r\n                    onClick={() => saveData()}\r\n                  >\r\n                    Aprobar\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n          </Row>\r\n        </Form>\r\n        </>\r\n        ) : null}\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DocumentResult\r\n"],"sourceRoot":""}