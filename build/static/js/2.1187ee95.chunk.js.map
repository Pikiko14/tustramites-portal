{"version":3,"sources":["pages/home/components/PYTDDialog.js","components/layout/components/CallMe.js","components/layout/components/Callus.js","components/layout/components/chat/ChatContent.js","components/layout/components/ChatMe.js","pages/home/components/HelpFloat.js","pages/user/components/UserDialog.js","components/layout/components/menu/DrawerMenu.js","components/layout/components/menu/DrawerMobile.js","components/layout/components/Header.js","components/layout/Layout.js","components/layout/components/Notifications.js"],"names":["PTYDDialog","_ref","page","data","setData","callback","handleOk","_jsx","Modal","open","onOk","onCancel","forceRender","centered","maskClosable","className","footer","Button","type","onClick","children","handleCancel","dangerouslySetInnerHTML","__html","content","replace","Option","Select","CallMe","user","useContext","AuthContext","setPage","useState","pages","setPages","pytdDialog","setPytdDialog","checked","setChecked","dispatch","Context","form","Form","useForm","useEffect","async","response","HttpClient","get","status","loadPages","loadValues","name","concat","first_name","last_name","email","phone","schedule","message","setFieldsValue","_jsxs","_Fragment","value","style","backgroundImage","layout","onFinish","fetch","process","REACT_APP_URL_API","headers","Accept","method","body","JSON","stringify","values","ok","resetFields","payload","Alert","show","title","btnOk","fnOk","btnCancel","buttonX","Item","rules","required","min","max","Input","placeholder","suffixIcon","CaretDownOutlined","TextArea","autoSize","maxRows","minRows","rows","Checkbox","onChange","e","target","find","x","url","htmlType","CallUs","isMobile","setIsMobile","setPhone","httpClient","loadPhone","userAgent","navigator","test","href","ChatContent","whatsapp","options","levelKeys","setLevelKeys","actualLevel","setActualLevel","history","setHistory","validateOptionSelected","key","keys","result","item","secondLevel","level","sons","preloadHistory","length","items","histories","levelOptions","localStorage","getItem","parseInt","parse","index","description","map","i","push","finder","element","thirdLevel","ReactWhatsapp","number","WhatsappIcon","setBack","slice","setItem","toString","temp","optionSelected","error","id","disabled","autoComplete","SendOutlined","ChatMe","setWhatsapp","setOptions","then","res","catch","err","removeItem","closeHistory","HelpFloat","myButtonRef","React","useRef","whatsappNumber","setWhatsappNumber","putHover","current","parentElement","classList","remove","src","LogoTTVAloneIcon","removeHover","ref","CallIcon","UserDialog","files","setFiles","fieldEnterprise","setFieldEnterprise","changeDone","setChangeDone","changeImage","setChangeImage","undefined","validateFields","errorFields","formData","FormData","append","originFileObj","getFieldValue","password","role","enterprise","name_enterprise","url_image","change_image","put","_id","loadUser","urlFile","uid","thumbUrl","nodeIcons","document","getElementsByClassName","node","childNodes","width","closeIcon","CloseOutlined","ImgCrop","rotate","aspect","modalTitle","shape","modalOk","modalCancel","Upload","listType","fileList","defaultFileList","file","requiredMark","label","hasFeedback","display","justifyContent","Radio","Group","defaultValue","onchangeRadio","Cookies","DrawerMenu","drawerMenu","onClose","useHistory","userDialog","setUserDialog","callbackUser","window","screen","LogoTTV","Menu","mode","defaultSelectedKeys","location","pathname","defaultOpenKeys","split","height","borderRight","icon","HomeIcon","MyProceduresIcon","QuestionsIcon","TeamIcon","EnterpriceIcon","BankIcon","NotificationIconWhite","DrawerMobile","openDrawer","setOpenDrawer","Drawer","placement","closable","cookies","Header","isHoveredNotifications","setIsHoveredNotifications","isHoveredConfig","setIsHoveredConfig","isHoveredOut","setIsHoveredOut","updateUser","handleCloseUser","change","alt","onMouseOver","handleMouseOverNotify","onMouseOut","handleMouseOutNotify","Notifications","handleMouseOverConfig","handleMouseOutConfig","SettingsIcon","clear","fnCancel","handleMouseOverOut","handleMouseOutOut","LogOutIcon","Layout","loader","visible","hasHeaderProfile","classNameMain","state","getChat","Loader","call_me","call_us","chat_me","Link","Typography","notifications","setNotifications","PopoverNotification","Dropdown","trigger","view","updateNotification","ExclamationCircleFilled","moment","created_at","locale","format","DeleteOutlined","deleteNotification","text","link","ExportOutlined","list","delete","filter","loadNotifications","console","log","count","showNotification","Notification","cleanupFunction","interval","setInterval","clearInterval","Popover","Badge","dot","NotificationIcon"],"mappings":"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","file":"static/js/2.1187ee95.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Modal, Button } from 'antd'\r\n\r\nconst PTYDDialog = ({ page, data, setData, callback }) => {\r\n  const handleOk = () => {\r\n    setData(null)\r\n    callback(true)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setData(null)\r\n    callback(false)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={data}\r\n      onOk={handleOk}\r\n      onCancel={handleOk}\r\n      forceRender\r\n      centered\r\n      maskClosable={false}\r\n      className=\"modalPYTD\"\r\n      footer={[\r\n        <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          Aceptar términos\r\n        </Button>,\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Cancelar\r\n        </Button>\r\n      ]}\r\n    >\r\n      <div\r\n        dangerouslySetInnerHTML={{\r\n          __html:\r\n            page &&\r\n            page.content\r\n              .replace('oembed', 'embed')\r\n              .replace('url', 'src')\r\n              .replace('</oembed>', '</embed>')\r\n              .replace('watch?v=', 'embed/')\r\n        }}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PTYDDialog\r\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport { Form, Input, Checkbox, Select, notification, Button } from 'antd'\r\n\r\nimport { Context } from '../../../context/store'\r\nimport PTYDDialog from '../../../pages/home/components/PYTDDialog'\r\nimport HttpClient from '../../../helpers/network/HttpClient'\r\nimport Alert from '../../../helpers/alert/Alert'\r\n\r\nimport { CaretDownOutlined, CloseOutlined } from '@ant-design/icons'\r\nimport AuthContext from '../../../context/AuthContext'\r\n\r\nimport '../scss/call-me.scss'\r\n\r\nconst { Option } = Select\r\n\r\nconst CallMe = () => {\r\n  const { user } = useContext(AuthContext)\r\n  const [page, setPage] = useState()\r\n  const [pages, setPages] = useState([])\r\n  const [pytdDialog, setPytdDialog] = useState()\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  const { dispatch } = useContext(Context)\r\n  const [form] = Form.useForm()\r\n\r\n  const onFinish = async (values) => {\r\n    if (checked) {\r\n      const response = await fetch(process.env.REACT_APP_URL_API + '/api/callme', {\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(values)\r\n      })\r\n\r\n      if (response.ok) {\r\n        form.resetFields()\r\n\r\n        dispatch({\r\n          type: 'CALL_ME',\r\n          payload: false\r\n        })\r\n\r\n        Alert.show({\r\n          type: 'success',\r\n          title: 'Solicitud Exitosa',\r\n          message: 'Se ha enviado tu solicitud de llamada.',\r\n          btnOk: 'Aceptar',\r\n          fnOk: () => { },\r\n          btnCancel: 'Cancelar',\r\n          buttonX: true\r\n        })\r\n      } else {\r\n        Alert.show({\r\n          type: 'error',\r\n          title: '¡Ups!',\r\n          message: 'Error al enviar tu solicitud de llamada',\r\n          btnOk: 'Aceptar',\r\n          fnOk: () => { },\r\n          btnCancel: 'Cancelar',\r\n          buttonX: true\r\n        })\r\n      }\r\n    } else {\r\n      Alert.show({\r\n        type: 'error',\r\n        title: '',\r\n        message: 'Por favor acepta la política de privacidad',\r\n        btnOk: 'Aceptar',\r\n        fnOk: () => { },\r\n        btnCancel: 'Cancelar',\r\n        buttonX: true\r\n      })\r\n    }\r\n  }\r\n\r\n  const loadPages = async () => {\r\n    const response = await HttpClient.get('/api/page')\r\n    if (response.status === 200) {\r\n      setPages(response.data)\r\n    }\r\n  }\r\n\r\n  const openPYTD = () => {\r\n    setPage(pages.find((x) => x.url === 'politica-privacidad'))\r\n    setPytdDialog(pages.find((x) => x.url === 'politica-privacidad'))\r\n  }\r\n\r\n  const loadValues = () => {\r\n    let data = {\r\n      name: `${user.first_name || ''} ${user.last_name || ''}`,\r\n      email: user.email,\r\n      phone: '',\r\n      schedule: 'Cualquier horario',\r\n      message: ''\r\n    }\r\n    form.setFieldsValue(data)\r\n  }\r\n\r\n  const callback = (value) => {\r\n    setChecked(value)\r\n  }\r\n\r\n  function onChange(e) {\r\n    setChecked(e.target.checked)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPages()\r\n    loadValues()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <PTYDDialog page={page} data={pytdDialog} setData={setPytdDialog} callback={callback} />\r\n      <div className=\"call-me\">\r\n        <div\r\n          className=\"call-me-header\"\r\n          style={{ backgroundImage: 'url(/assets/images/fondoperfil.jpeg)' }}\r\n        >\r\n          <h6>Nosotros te llamamos</h6>\r\n          {/* <CloseOutlined\r\n            onClick={() =>\r\n              dispatch({\r\n                type: 'CALL_ME',\r\n                payload: false\r\n              })\r\n            }\r\n          /> */}\r\n        </div>\r\n        <div className=\"call-me-content\">\r\n          <div className=\"containerDescriptions\">\r\n            <p>Bienvenid@</p>\r\n            <p>\r\n              Nuestro horario de atención es de 8:00 a 17:00. Por favor déjanos tus datos y en el\r\n              menor tiempo posible te estaremos contactando.\r\n            </p>\r\n          </div>\r\n\r\n          <Form form={form} layout=\"vertical\" onFinish={onFinish}>\r\n            <Form.Item\r\n              name=\"name\"\r\n              // label=\"Nombre Completo\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa tu nombre'\r\n                },\r\n                {\r\n                  min: 3,\r\n                  message: 'Tu nombre debe tener mínimo 3 caracteres'\r\n                },\r\n                {\r\n                  max: 50,\r\n                  message: 'Tu nombre debe tener máximo 50 caracteres'\r\n                }\r\n              ]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"Nombre Completo\" />\r\n            </Form.Item>\r\n            <div className=\"form-control\">\r\n              <Form.Item\r\n                name=\"email\"\r\n                // label=\"Correo electrónico\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresa tu correo electrónico'\r\n                  },\r\n                  {\r\n                    type: 'email',\r\n                    message: 'El email que ingresaste no es válido'\r\n                  }\r\n                ]}\r\n              >\r\n                <Input type=\"email\" placeholder=\"Correo electrónico\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"phone\"\r\n                // label=\"Celular\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Por favor ingresa tu número celular'\r\n                  },\r\n                  {\r\n                    min: 8,\r\n                    message: 'Tu número celular debe tener mínimo 8 dígitos'\r\n                  }\r\n                ]}\r\n              >\r\n                <Input type=\"number\" placeholder=\"Celular\" />\r\n              </Form.Item>\r\n            </div>\r\n\r\n            <div className=\"containerDescriptions\">\r\n              <p>¿En qué horario prefieres que te llamemos?</p>\r\n            </div>\r\n            <Form.Item\r\n              name=\"schedule\"\r\n              // label=\"¿En qué horario deberíamos llamarte?\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor seleciona una opción'\r\n                }\r\n              ]}\r\n            >\r\n              <Select\r\n                placeholder=\"¿En qué horario deberíamos llamarte?\"\r\n                suffixIcon={<CaretDownOutlined />}\r\n              >\r\n                <Option value=\"Cualquier horario\" className=\"optionCallMe\">\r\n                  Cualquier horario\r\n                </Option>\r\n                <Option value=\"Mañana\" className=\"optionCallMe\">\r\n                  Mañana\r\n                </Option>\r\n                <Option value=\"Tarde\" className=\"optionCallMe\">\r\n                  Tarde\r\n                </Option>\r\n                <Option value=\"Noche\" className=\"optionCallMe\">\r\n                  Noche\r\n                </Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"message\"\r\n              // label=\"¿Cuéntanos brevemente tu inquietud?\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa tu mensaje o solicitud'\r\n                },\r\n                {\r\n                  min: 5,\r\n                  message: 'Tu mensaje o solicitud debe tener mínimo 5 caracteres'\r\n                },\r\n                {\r\n                  max: 300,\r\n                  message: 'Tu mensaje o solicitud debe tener máximo 300 caracteres'\r\n                }\r\n              ]}\r\n            >\r\n              <Input.TextArea\r\n                autoSize={{ maxRows: 3, minRows: 3 }}\r\n                rows={3}\r\n                placeholder=\"Describe brevemente tu inquietud\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <div className=\"form-footer\">\r\n              <Form.Item\r\n                name=\"polity\"\r\n                //valuePropName=\"checked\"\r\n                // label=\"\"\r\n                className=\"containerCheck\"\r\n              /*rules={[\r\n              {\r\n                required: true,\r\n                message: 'Por favor acepta la política de privacidad'\r\n              }\r\n            ]}*/\r\n              >\r\n                <Checkbox onChange={onChange} checked={checked} />\r\n                <span className=\"text\" onClick={() => openPYTD()}>\r\n                  He leído y acepto la política de privacidad\r\n                </span>\r\n              </Form.Item>\r\n              <div className=\"containerButtons\">\r\n                <Button\r\n                  className=\"btnContinuar\"\r\n                  onClick={() =>\r\n                    dispatch({\r\n                      type: 'CALL_ME',\r\n                      payload: false\r\n                    })\r\n                  }\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n                <Button htmlType=\"submit\" className=\"btnSave\">\r\n                  Enviar\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CallMe\r\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport { Form, Button } from 'antd'\r\nimport httpClient from '../../../helpers/network/HttpClient'\r\n\r\nimport { Context } from '../../../context/store'\r\nimport AuthContext from '../../../context/AuthContext'\r\n\r\nimport '../scss/call-me.scss'\r\n\r\nconst CallUs = () => {\r\n  const { user } = useContext(AuthContext)\r\n  const { dispatch } = useContext(Context)\r\n  const [form] = Form.useForm()\r\n  const [isMobile, setIsMobile] = useState(false)\r\n  const [phone, setPhone] = useState('')\r\n\r\n  const loadPhone = async () => {\r\n    const response = await httpClient.get('/api/aditional/search/phone')\r\n    if (response.status === 200) {\r\n      setPhone(response.data)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPhone()\r\n\r\n    const userAgent = navigator.userAgent\r\n    setIsMobile(/Mobi|Android/i.test(userAgent))\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"call-me\">\r\n        <div\r\n          className=\"call-me-header\"\r\n          style={{ backgroundImage: 'url(/assets/images/fondoperfil.jpeg)' }}\r\n        >\r\n          <h6>Llámanos</h6>\r\n        </div>\r\n        <div className=\"call-me-content\">\r\n          <div className=\"containerDescriptions\">\r\n            <p>Bienvenid@</p>\r\n            <p>\r\n              Nuestro horario de atención es de 8:00 a 17:00. A continuación te dejamos nuestro teléfono.\r\n            </p>\r\n          </div>\r\n\r\n          <Form form={form} layout=\"vertical\">\r\n\r\n            <div className=\"form-footer\">\r\n              <Form.Item\r\n                name=\"polity\"\r\n                className=\"containerCheck\"\r\n              >\r\n                <span>\r\n                  {phone}\r\n                </span>\r\n              </Form.Item>\r\n              <div className=\"containerButtons\">\r\n                <Button\r\n                  className=\"btnContinuar\"\r\n                  onClick={() =>\r\n                    dispatch({\r\n                      type: 'CALL_US',\r\n                      payload: false\r\n                    })\r\n                  }\r\n                >\r\n                  Cerrar\r\n                </Button>\r\n                {isMobile ?\r\n                  <Button className=\"btnSave\" >\r\n                    <a href={`tel:${phone}`}>\r\n                      Llamar\r\n                    </a>\r\n                  </Button>\r\n                  : null}\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CallUs\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport Alert from '../../../../helpers/alert/Alert'\r\nimport ReactWhatsapp from 'react-whatsapp'\r\nimport { WhatsappIcon } from '../../../../components/icons/Icons'\r\nimport httpClient from '../../../../helpers/network/HttpClient'\r\nimport AuthContext from '../../../../context/AuthContext'\r\nimport './ChatContent.scss'\r\n\r\nimport { SendOutlined } from '@ant-design/icons'\r\n\r\nconst ChatContent = ({ whatsapp, options, levelKeys, setLevelKeys, actualLevel, setActualLevel }) => {\r\n  const [form] = Form.useForm()\r\n  const [history, setHistory] = useState([])\r\n  //const [options, setOptions] = useState([])\r\n  const { user } = useContext(AuthContext)\r\n\r\n  const sendMessage = (value) => {\r\n    if (value.message != '') {\r\n      let message = ''\r\n      try {\r\n        let key = parseInt(value.message)\r\n        let temp = [...history]\r\n        let keys = [...levelKeys]\r\n\r\n        let optionSelected = validateOptionSelected(key, keys)\r\n\r\n        if (optionSelected) {\r\n          temp.push({ description: value.message })\r\n          let level = actualLevel + 1\r\n          setActualLevel(level)\r\n          if (level == 1) keys[0] = optionSelected.key\r\n          else if (level == 2) keys[1] = optionSelected.key\r\n          else if (level == 3) keys[2] = optionSelected.key\r\n          //setHistory(temp)\r\n          localStorage.setItem('levelKeys', JSON.stringify([...keys]))\r\n          localStorage.setItem('actualLevel', ('' + level))\r\n          setLevelKeys(keys)\r\n          //loadHistory()\r\n          preloadHistory()\r\n        } else {\r\n          message = 'La opción que elegiste no pudo ser encontrada. Por favor vuelve a intentar'\r\n        }\r\n      } catch (error) {\r\n        message = 'El valor que ingresaste no es válido, ingresa un nuevo valor y vuelve a intentar'\r\n      }\r\n      if (message != '')\r\n        Alert.show({\r\n          type: 'success',\r\n          title: '',\r\n          message: message,\r\n          btnOk: 'Aceptar',\r\n          fnOk: () => { },\r\n          btnCancel: 'Cancelar',\r\n          buttonX: true\r\n        })\r\n      form.resetFields()\r\n    }\r\n  }\r\n\r\n  const validateOptionSelected = (key, keys) => {\r\n      let result = undefined\r\n\r\n      if (actualLevel == 0) {\r\n          result = options.find(item => item.key == key)\r\n      }\r\n\r\n      if (actualLevel == 1) {\r\n          let secondLevel = options.find(item => item.key == keys[0]).secondLevel\r\n          let second = secondLevel.find(level => level.key == key)\r\n          result = second\r\n      }\r\n\r\n      if (actualLevel == 2) {\r\n          let secondLevel = options.find(item => item.key == keys[0]).secondLevel\r\n          let second = secondLevel.find(level => level.key == keys[1])\r\n          let thirthLevel = second.sons.find(item => item.key == key)\r\n          result = thirthLevel\r\n      }\r\n      \r\n      return result\r\n  }\r\n\r\n  const loadHistory = () => {\r\n\r\n      if (actualLevel == 0) {\r\n          let value = { description: 'Bienvenido, elige una de las siguientes opciones' }\r\n          let items = []\r\n          options.map((item, i) => (\r\n              items.push(item.key + ' ' + item.title)\r\n          ))\r\n          value.items = items\r\n          value.whatsapp = false\r\n          let a = []\r\n          a.push(value)\r\n          setHistory(a)\r\n      } else {\r\n          let levelOptions = []\r\n          let value = {}\r\n          if (actualLevel == 1) {\r\n\r\n              let finder = options.find(item => item.key == levelKeys[0])\r\n              value.description = finder.description\r\n              levelOptions = finder.secondLevel || []\r\n              value.whatsapp = finder.whatsapp\r\n          } else if (actualLevel == 2) {\r\n\r\n              let finder = options.find(item => item.key == levelKeys[0])\r\n              let secondLevel = finder.secondLevel.find(element => element.key == levelKeys[1])\r\n              value.description = secondLevel.description\r\n              levelOptions = secondLevel.sons || []\r\n              value.whatsapp = secondLevel.whatsapp\r\n          } else if (actualLevel == 3) {\r\n              let finder = options.find(item => item.key == levelKeys[0])\r\n\r\n              let secondLevel = finder.secondLevel.find(element => element.key == levelKeys[1])\r\n\r\n              let thirdLevel = secondLevel.sons.find(element => element.key == levelKeys[2]) || null\r\n\r\n              if (thirdLevel) {\r\n                  levelOptions.push(thirdLevel)\r\n                  value.description = thirdLevel.description\r\n                  value.whatsapp = thirdLevel.whatsapp\r\n              } else {\r\n                  levelOptions = []\r\n                  value.whatsapp = false\r\n              }\r\n          }\r\n\r\n          let items = []\r\n          levelOptions.map((item, i) => {\r\n              if (actualLevel == 3)\r\n                  items.push(item.title + ': \\n' + item.description)\r\n              else\r\n                  items.push(item.key + ' ' + item.title)\r\n          })\r\n          value.items = items\r\n          let historyTemp = [...history]\r\n          historyTemp.push(value)\r\n          setHistory(historyTemp)\r\n      }\r\n\r\n  }\r\n\r\n  const preloadHistory = () => {\r\n    if (options.length > 0) {\r\n      let value = {}\r\n      let items = []\r\n      let histories = []\r\n      let levelOptions = []\r\n      let level = localStorage.getItem('actualLevel') ? parseInt(localStorage.getItem('actualLevel')) : actualLevel\r\n      let keys = localStorage.getItem('levelKeys') ? JSON.parse(localStorage.getItem('levelKeys')) : levelKeys\r\n\r\n      for (let index = 0; index <= level; index++) {\r\n        if (index == 0) {\r\n          value = { description: 'Bienvenido, elige una de las siguientes opciones' }\r\n          options.map((item, i) => items.push(item.key + ' ' + item.title))\r\n          value.items = items\r\n          value.whatsapp = false\r\n          histories.push(value)\r\n        } else if (index == 1) {\r\n          histories.push({ description: keys[0] })\r\n\r\n          let finder = options.find((item) => item.key == keys[0])\r\n          value.description = finder.description\r\n          levelOptions = finder.secondLevel || []\r\n          levelOptions.map((item, i) => {\r\n            items.push(item.key + ' ' + item.title)\r\n          })\r\n          value.whatsapp = finder.whatsapp\r\n          value.items = items\r\n          histories.push(value)\r\n        } else if (index == 2) {\r\n          histories.push({ description: keys[1] })\r\n\r\n          let finder = options.find((item) => item.key == keys[0])\r\n          let secondLevel = finder.secondLevel.find((element) => element.key == keys[1])\r\n          value.description = secondLevel.description\r\n          levelOptions = secondLevel.sons || []\r\n          levelOptions.map((item, i) => {\r\n            items.push(item.key + ' ' + item.title)\r\n          })\r\n          value.whatsapp = secondLevel.whatsapp\r\n          value.items = items\r\n          histories.push(value)\r\n        } else if (index == 3) {\r\n          histories.push({ description: keys[1] })\r\n\r\n          let finder = options.find((item) => item.key == keys[0])\r\n          let secondLevel = finder.secondLevel.find((element) => element.key == keys[1])\r\n          let thirdLevel = secondLevel.sons.find((element) => element.key == keys[2]) || null\r\n          if (thirdLevel) {\r\n            levelOptions.push(thirdLevel)\r\n            levelOptions.map((item, i) => {\r\n              items.push(item.title + ': \\n' + item.description)\r\n            })\r\n            value.items = items\r\n            value.description = thirdLevel.description\r\n            value.whatsapp = thirdLevel.whatsapp\r\n\r\n          } else {\r\n            value.items = []\r\n            value.whatsapp = false\r\n          }\r\n          histories.push(value)\r\n        }\r\n        value = {}\r\n        items = []\r\n        levelOptions = []\r\n\r\n      }\r\n      setHistory(histories)\r\n    }\r\n  }\r\n\r\n  const setBack = () => {\r\n    let level = localStorage.getItem('actualLevel') ? parseInt(localStorage.getItem('actualLevel')) : actualLevel\r\n    let keys = localStorage.getItem('levelKeys') ? JSON.parse(localStorage.getItem('levelKeys')) : levelKeys\r\n    level = level - 1\r\n\r\n    let newHistory = history.slice(0, level + level)\r\n    keys = keys.slice(0, level)\r\n    localStorage.setItem('actualLevel', level.toString())\r\n    localStorage.setItem('levelKeys', JSON.stringify([...keys]))\r\n    setActualLevel(level)\r\n    setLevelKeys(keys)\r\n    //setHistory(newHistory)\r\n    preloadHistory()\r\n  }\r\n\r\n  useEffect(() => {\r\n    preloadHistory()\r\n  }, [options])\r\n\r\n\r\n  return (\r\n    <>\r\n      {(options && options.length > 0) ? (\r\n        <>\r\n          <div className=\"chat\">\r\n            <div className=\"message\">\r\n              {history &&\r\n                history.map((item, i) => (\r\n                  <div key={i} className=\"message-content\">\r\n                    {item.items ? (\r\n                      <>\r\n                        {item.items.length > 0 && (\r\n                          <>\r\n                            <span>{item.description}</span>\r\n                            <ul className=\"burbuje other\" key={i}>\r\n                              {item.items.map((element, index) => (\r\n                                <li key={index}>{element}</li>\r\n                              ))}\r\n                            </ul>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <p className=\"burbuje me\">{item.description}</p>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"containerButtons\">\r\n              {history.length > 0 &&\r\n                history.map(\r\n                  (item, i) =>\r\n                    i == history.length - 1 &&\r\n                    item.whatsapp && (\r\n                      <div className=\"buttonWhatsapp\" key={i}>\r\n                        <ReactWhatsapp\r\n                          number={whatsapp}\r\n                          message=\"Hola, quisiera realizarte una consulta. Puedes ayudarme?\"\r\n                        >\r\n                          <WhatsappIcon />\r\n                          {/* <img src=\"/assets/icon/home_message.svg\" /> */}\r\n                          <span>WhatsApp</span>\r\n                        </ReactWhatsapp>\r\n                      </div>\r\n                    )\r\n                )}\r\n              {actualLevel > 0 && (\r\n                <div className=\"containerBack\">\r\n                  <a onClick={() => setBack()}>Atrás</a>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n\r\n            <div className=\"message-form\">\r\n              <Form layout=\"vertical\" form={form} onFinish={sendMessage}>\r\n                <Form.Item\r\n                  name=\"message\"\r\n                  id=\"message\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Por favor ingresa un número entre 1 y 99'\r\n                    },\r\n                    {\r\n                      min: 1,\r\n                      message: 'Por favor ingresa un número menor a 99'\r\n                    },\r\n                    {\r\n                      max: 2,\r\n                      message: 'Por favor ingresa un número menor a 99'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    disabled={!(actualLevel < 3)}\r\n                    placeholder=\"Elige una de las opciones\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Button htmlType=\"submit\" className=\"buttonFinish\">\r\n                  <SendOutlined />\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) :\r\n        null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChatContent\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Form, Input, Checkbox, Select, notification, Button } from 'antd'\r\nimport { useUID } from 'react-uid'\r\nimport Alert from '../../../helpers/alert/Alert'\r\n\r\nimport AuthContext from '../../../context/AuthContext'\r\nimport { Context } from '../../../context/store'\r\n\r\nimport ChatContent from './chat/ChatContent'\r\nimport '../scss/chat-me.scss'\r\n\r\nimport HttpClient from '../../../helpers/network/HttpClient'\r\n\r\nconst ChatMe = () => {\r\n  const { dispatch } = useContext(Context)\r\n  const { user } = useContext(AuthContext)\r\n  const [whatsapp, setWhatsapp] = useState('')\r\n  const [options, setOptions] = useState([])\r\n  const [levelKeys, setLevelKeys] = useState([])\r\n  const [actualLevel, setActualLevel] = useState(0)\r\n\r\n  const closeHistory = async () => {\r\n    Alert.show({\r\n      type: 'success',\r\n      title: '',\r\n      message:\r\n        '¿Estás seguro de finalizar el chat?',\r\n      btnOk: 'Si',\r\n      fnOk: async () => {\r\n        localStorage.removeItem('actualLevel')\r\n        localStorage.removeItem('levelKeys')\r\n        dispatch({\r\n          type: 'CHAT_ME',\r\n          payload: false\r\n        })\r\n\r\n      },\r\n      btnCancel: 'Cancelar',\r\n      buttonX: true\r\n    })\r\n  }\r\n\r\n  const loadPhone = async () => {\r\n    const response = await HttpClient.get('/api/aditional/search/whatsapp')\r\n    if (response.status === 200) {\r\n      setWhatsapp(response.data)\r\n    }\r\n  }\r\n\r\n  const loadOptions = () => {\r\n    HttpClient.get('/api/chatbot')\r\n      .then((res) => {\r\n        setOptions(res.data)\r\n      })\r\n      .catch((err) => {\r\n      })\r\n  }\r\n\r\n  const loadStates = () => {\r\n    if (localStorage.getItem('levelKeys'))\r\n      setLevelKeys(JSON.parse(localStorage.getItem('levelKeys')))\r\n\r\n    if (localStorage.getItem('actualLevel'))\r\n      setActualLevel(parseInt(localStorage.getItem('actualLevel')))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPhone()\r\n    loadOptions()\r\n    loadStates()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {/*<PTYDDialog page={page} data={pytdDialog} setData={setPytdDialog} />*/}\r\n      <div className=\"chat-me\">\r\n        <div\r\n          style={{ backgroundImage: 'url(/assets/images/fondoperfil.jpeg)' }}\r\n          className=\"chat-me-header\"\r\n        >\r\n          <h6>Chat en línea</h6>\r\n        </div>\r\n\r\n        <ChatContent\r\n          whatsapp={whatsapp}\r\n          options={options}\r\n          levelKeys={levelKeys}\r\n          setLevelKeys={setLevelKeys}\r\n          actualLevel={actualLevel}\r\n          setActualLevel={setActualLevel}\r\n        />\r\n        <div className='containerButton'>\r\n          <Button\r\n            className=\"btnContinuar\"\r\n            onClick={() => closeHistory()}\r\n          >\r\n            Cerrar chat\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChatMe\r\n","  import React, { useContext, useState, useEffect } from 'react'\r\n// import { useState } from 'react'\r\nimport {\r\n  LogoTTVAloneIcon,\r\n  TelegramIcon,\r\n  WhatsappIcon,\r\n  CallIcon\r\n} from '../../../components/icons/Icons'\r\nimport { Context } from '../../../context/store'\r\nimport ReactWhatsapp from 'react-whatsapp'\r\nimport httpClient from '../../../helpers/network/HttpClient'\r\n\r\nconst HelpFloat = () => {\r\n  const { dispatch } = useContext(Context)\r\n  // const [first, setfirst] = useState('btn-help-hover')\r\n  const myButtonRef = React.useRef()\r\n  const [whatsappNumber, setWhatsappNumber] = useState('')\r\n\r\n  const removeHover = () => {\r\n    myButtonRef.current.parentElement.parentElement.classList.remove('no-hover')\r\n  }\r\n\r\n  const loadPhone = async () => {\r\n    const response = await httpClient.get('/api/aditional/search/whatsapp')\r\n    if (response.status === 200) {\r\n      setWhatsappNumber(response.data)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPhone()\r\n  }, [])\r\n\r\n  const putHover = () => {\r\n    myButtonRef.current.parentElement.parentElement.classList.remove('no-hover')\r\n  }\r\n\r\n  return (\r\n    <div className=\"btn-help\">\r\n      <div className=\"btn-help-hover\" onClick={putHover}>\r\n        <img className=\"globe-help\" src=\"/assets/images/need_help_globe.png\" />\r\n        <span className=\"btn-help-hover-main\">\r\n          <LogoTTVAloneIcon />\r\n        </span>\r\n        {/* <img className=\"action-help\" src=\"/assets/image/btn_help.png\" /> */}\r\n      </div>\r\n      {/* <img className=\"action-help\" onMouseOver={showPanel} src=\"/assets/images/btn_help.png\" /> */}\r\n      <div className=\"panel-help\">\r\n        <span className=\"panel-help-rectangule\" onClick={removeHover} ref={myButtonRef}>\r\n          <img className=\"close\" src=\"/assets/icon/close.svg\" />\r\n        </span>\r\n        {/* <img className=\"rectangule\" src=\"/assets/icon/rectangule.svg\" /> */}\r\n        {/* <img className=\"close\" src=\"/assets/icon/close.svg\" /> */}\r\n        <div\r\n          className=\"help-menu one\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'CHAT_ME',\r\n              payload: true\r\n            })\r\n          }\r\n        >\r\n          <img src=\"/assets/icon/home_message.svg\" />\r\n          <p>Chat en línea</p>\r\n        </div>\r\n        <div\r\n          className=\"help-menu three\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'CALL_US',\r\n              payload: true\r\n            })\r\n          }\r\n        >\r\n          <CallIcon />\r\n          <p>Llámanos</p>\r\n        </div>\r\n        <div\r\n          className=\"help-menu two\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'CALL_ME',\r\n              payload: true\r\n            })\r\n          }\r\n        >\r\n          <img src=\"/assets/icon/home_support.svg\" />\r\n          <p>Nosotros te llamamos</p>\r\n        </div>\r\n        {/*<ReactWhatsapp\r\n          className=\"help-menu one\"\r\n          number={whatsappNumber}\r\n          message=\"Hola, quisiera realizarte una consulta. Puedes ayudarme?\"\r\n        >\r\n\r\n          {/*<WhatsappIcon />*/}\r\n        {/*  <img src=\"/assets/icon/home_message.svg\"/>\r\n          <p>Chat en linea</p>\r\n        </ReactWhatsapp>*/}\r\n\r\n        {/* <div\r\n          className=\"help-menu one\"\r\n          // onClick={() =>\r\n          //   dispatch({\r\n          //     type: 'CALL_ME',\r\n          //     payload: true\r\n          //   })\r\n          // }\r\n        ></div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HelpFloat\r\n","import { CloseOutlined } from '@ant-design/icons'\r\nimport { Button, Form, Input, Modal, Radio, Upload } from 'antd'\r\nimport ImgCrop from 'antd-img-crop'\r\nimport React, { useEffect, useState } from 'react'\r\nimport HttpClient from '../../../helpers/network/HttpClient'\r\nimport './scss/UserDialog.scss'\r\n\r\nconst UserDialog = ({ user, data, setData, callback }) => {\r\n  const [form] = Form.useForm()\r\n  const [files, setFiles] = useState([])\r\n  const [fieldEnterprise, setFieldEnterprise] = useState(false)\r\n  const [changeDone, setChangeDone] = useState(false)\r\n  const [changeImage, setChangeImage] = useState(false)\r\n\r\n  const onChange = (file) => {\r\n    setChangeDone(true)\r\n    setChangeImage(true)\r\n    setFiles(file.fileList)\r\n  }\r\n\r\n  const changeTitlesPreview = (node) => {\r\n    node[node.length - 1].childNodes[0].title = 'Ver'\r\n    node[node.length - 1].childNodes[1].title = 'Eliminar'\r\n  }\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file.originFileObj)\r\n        reader.onload = () => resolve(reader.result)\r\n      })\r\n    }\r\n    const image = new Image()\r\n    image.src = src\r\n    const imgWindow = window.open(src)\r\n    imgWindow.document.write(image.outerHTML)\r\n  }\r\n\r\n  const handleOk = async () => {\r\n    let fields = await form.validateFields()\r\n    if (fields.errorFields == undefined) {\r\n      const formData = new FormData()\r\n      if (user) {\r\n        if (files.length > 0) formData.append('image', files[0].originFileObj)\r\n\r\n        formData.append(\r\n          'user',\r\n          JSON.stringify({\r\n            first_name: form.getFieldValue('first_name'),\r\n            last_name: form.getFieldValue('last_name'),\r\n            email: form.getFieldValue('email'),\r\n            password: form.getFieldValue('password'),\r\n            role: form.getFieldValue('role'),\r\n            user: form.getFieldValue('phone') ? form.getFieldValue('phone') : '',\r\n            enterprise: form.getFieldValue('name_enterprise') == '' ? false : true,\r\n            name_enterprise: form.getFieldValue('name_enterprise'),\r\n            phone: form.getFieldValue('phone') || undefined,\r\n            url_image: user.url_image || '',\r\n            change_image: changeImage\r\n          })\r\n        )\r\n\r\n        HttpClient.put('/api/user/' + (user._id ? user._id : user.id), formData).then((res) => {\r\n          setData(null)\r\n          callback(changeDone)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setData(null)\r\n  }\r\n\r\n  const onchangeRadio = () => {\r\n    if (form.getFieldValue('enterprise') == 1) {\r\n      setFieldEnterprise(true)\r\n    } else {\r\n      setFieldEnterprise(false)\r\n      if (user) {\r\n        user.name_enterprise = ''\r\n        loadUser(user)\r\n      }\r\n    }\r\n  }\r\n\r\n  const loadUser = (user) => {\r\n    let data = {\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      password: user.password,\r\n      email: user.email,\r\n      role: user.role,\r\n      phone: user.phone,\r\n      name_enterprise: user.name_enterprise\r\n    }\r\n    form.setFieldsValue(data)\r\n    if (user.url_image) {\r\n      let urlFile = process.env.REACT_APP_URL_API + '/api/storage?url=' + user.url_image\r\n      setFiles([\r\n        {\r\n          uid: '-1',\r\n          name: 'load.png',\r\n          status: 'done',\r\n          url: urlFile,\r\n          thumbUrl: urlFile\r\n        }\r\n      ])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n    if (user) {\r\n      loadUser(user)\r\n    } else {\r\n      setFiles([])\r\n    }\r\n  }, [user, data])\r\n\r\n  useEffect(() => {\r\n    const nodeIcons = document.getElementsByClassName('ant-upload-list-item-actions')\r\n    if (nodeIcons.length > 0) {\r\n      changeTitlesPreview(nodeIcons)\r\n    }\r\n  }, [user, data])\r\n\r\n  return (\r\n    <Modal\r\n      open={data}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      forceRender\r\n      centered\r\n      className=\"modal-content-custom\"\r\n      width={'auto'}\r\n      maskClosable={false}\r\n      closeIcon={\r\n        <span onClick={handleCancel}>\r\n          <CloseOutlined />\r\n        </span>\r\n      }\r\n      footer={[\r\n        <Button className=\"btnContinuar\" key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          Guardar\r\n        </Button>\r\n      ]}\r\n    >\r\n      <div className=\"modal-user\">\r\n        <h3>Configura tu cuenta</h3>\r\n        <p className=\"subtitle\">Revisa y actualiza tus datos</p>\r\n        <div className=\"imagen\">\r\n          <Form.Item>\r\n            <p className=\"subtitle\">Imagen de perfil</p>\r\n            <ImgCrop\r\n              rotate={false}\r\n              aspect={50 / 50}\r\n              modalTitle={'Edita tu imagen'}\r\n              shape={'round'}\r\n              modalOk={'Guardar'}\r\n              modalCancel={'Cancelar'}\r\n            >\r\n              <Upload\r\n                listType=\"picture-card\"\r\n                fileList={files}\r\n                defaultFileList={[...files]}\r\n                onChange={onChange}\r\n              >\r\n                {files.length == 0 && '+ Upload'}\r\n              </Upload>\r\n            </ImgCrop>\r\n            <a className=\"restartpass\" href=\"/restartpassword\">\r\n              Cambiar contraseña\r\n            </a>\r\n          </Form.Item>\r\n        </div>\r\n        <Form layout=\"vertical\" form={form} requiredMark={false} onFinish={handleOk}>\r\n          <div className=\"form-control\">\r\n            <Form.Item\r\n              label=\"Nombre(s):\"\r\n              name=\"first_name\"\r\n              id=\"first_name\"\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'No olvides ingresar tu nombre'\r\n                },\r\n                {\r\n                  min: 3,\r\n                  message: 'Tu nombre tener al menos 3 caracteres!'\r\n                }\r\n              ]}\r\n            >\r\n              <Input onChange={() => setChangeDone(true)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Apellidos:\"\r\n              name=\"last_name\"\r\n              id=\"last_name\"\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa tu apellido'\r\n                },\r\n                {\r\n                  min: 3,\r\n                  message: 'Tu apellido deben tener al menos 3 caracteres'\r\n                }\r\n              ]}\r\n            >\r\n              <Input onChange={() => setChangeDone(true)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Celular/Teléfono:\"\r\n              name=\"phone\"\r\n              id=\"phone\"\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor ingresa tu número móvil'\r\n                },\r\n                {\r\n                  min: 7,\r\n                  message: 'Tu número móvil debe tener mínimo 7 caracteres'\r\n                },\r\n                {\r\n                  max: 10,\r\n                  message: 'Tu número móvil debe tener máximo 10 caracteres'\r\n                }\r\n              ]}\r\n            >\r\n              <Input type=\"number\" onChange={() => setChangeDone(true)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Correo:\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: 'email',\r\n                  message: 'Este correo no es válido. ¡Inténtalo de nuevo!'\r\n                }\r\n              ]}\r\n            >\r\n              <Input disabled=\"true\" onChange={() => setChangeDone(true)} />\r\n            </Form.Item>\r\n\r\n            {/*<Form.Item\r\n              className='enterprise-row'\r\n              label=\"Empresa:\"\r\n              name=\"name_enterprise\"\r\n              id=\"name_enterprise\"\r\n              hasFeedback\r\n            >\r\n              <Input onChange={() => setChangeDone(true)} />\r\n            </Form.Item>*/}\r\n\r\n            <Form.Item  style={{display:'flex', justifyContent:'center'}} label=\"¿Eres cliente empresarial?\" name=\"enterprise\" id=\"enteprise\">\r\n              <Radio.Group\r\n                defaultValue={user && user.enterprise != '' ? 1 : 2}\r\n                onChange={onchangeRadio}\r\n                style={{display:'flex', justifyContent:'center'}}\r\n              >\r\n                <Radio value={1}>Si</Radio>\r\n                <Radio value={2}>No</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n            {fieldEnterprise || (user && user.enterprise) ? (\r\n              <>\r\n                <Form.Item\r\n                  className=\"enterprise-row\"\r\n                  label=\"Empresa:\"\r\n                  name=\"name_enterprise\"\r\n                  id=\"name_enterprise\"\r\n                  hasFeedback\r\n                >\r\n                  <Input onChange={() => setChangeDone(true)} />\r\n                </Form.Item>\r\n              </>\r\n            ) : null}\r\n\r\n            {/*<Form.Item\r\n              name=\"role\"\r\n              id=\"role\"\r\n              label=\"Rol:\"\r\n              rules={[\r\n                {\r\n                  required: true\r\n                }\r\n              ]}\r\n            >\r\n              <Input className='selector-rol' placeholder=\"Seleccione un rol\" allowClear disabled={true}></Input>\r\n            </Form.Item>*/}\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default UserDialog\r\n","import { Menu } from 'antd'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Cookies from 'universal-cookie'\r\n\r\nimport { useState } from 'react'\r\nimport Alert from '../../../../helpers/alert/Alert'\r\nimport UserDialog from '../../../../pages/user/components/UserDialog'\r\nimport {\r\n  BankIcon,\r\n  EnterpriceIcon,\r\n  HomeIcon,\r\n  LogoTTV,\r\n  MyProceduresIcon,\r\n  NotificationIconWhite,\r\n  QuestionsIcon,\r\n  TeamIcon\r\n} from '../../../icons/Icons'\r\nconst cookies = new Cookies()\r\n\r\nconst DrawerMenu = ({ user, drawerMenu, onClose }) => {\r\n  const history = useHistory()\r\n\r\n  const [userDialog, setUserDialog] = useState()\r\n\r\n  const callbackUser = () => {\r\n    setUserDialog(null)\r\n  }\r\n\r\n  const handleShowUser = () => {\r\n    setUserDialog({ user })\r\n  }\r\n\r\n  const exitLogout = () => {\r\n    Alert.show({\r\n      type: 'warning',\r\n      title: 'Confirmación',\r\n      message: `¿ Esta seguro de salir ? `,\r\n      btnOk: 'Aceptar',\r\n      fnOk: () => {\r\n        cookies.remove('token')\r\n        window.location.href = '/login'\r\n      },\r\n      btnCancel: 'Cancelar',\r\n      fnCancel: () => { }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UserDialog user={user} data={userDialog} setData={callbackUser} callback={callbackUser} />\r\n      <div className=\"drawer\">\r\n        {window.screen.width <= 545 && (\r\n          <div className=\"drawer-close\" onClick={onClose}>\r\n            &times;\r\n          </div>\r\n        )}\r\n        <div className=\"drawer-logo\">\r\n          <LogoTTV />\r\n        </div>\r\n        <nav className=\"containerMenu\">\r\n          {user ? (\r\n            <>\r\n              {user.role === 'CLIENTE' ? (\r\n                <Menu\r\n                  mode=\"inline\"\r\n                  defaultSelectedKeys={[history.location.pathname]}\r\n                  defaultOpenKeys={[history.location.pathname.split('/')[1]]}\r\n                  style={{ height: '100%', borderRight: 0 }}\r\n                  className=\"mainMenu\"\r\n                >\r\n                  <Menu.Item key=\"/\" icon={<HomeIcon />} onClick={() => history.push('/')}>\r\n                    Inicio\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    key=\"/procedure\"\r\n                    icon={<MyProceduresIcon />}\r\n                    onClick={() => history.push('/procedure')}\r\n                  >\r\n                   Nuevo trámite\t\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    key=\"/procedurenotarial\"\r\n                    icon={<MyProceduresIcon />}\r\n                    onClick={() => history.push('/procedurenotarial')}\r\n                  >\r\n                    Mis trámites\r\n                  </Menu.Item>\r\n\r\n                 \r\n\r\n                  <Menu.Item\r\n                    key=\"/questions\"\r\n                    icon={<QuestionsIcon />}\r\n                    onClick={() => history.push('/questions')}\r\n                  >\r\n                    Preguntas frecuentes\r\n                  </Menu.Item>\r\n                  {/* {drawerMenu && (\r\n                    <>\r\n                      <Menu.Item icon={<SettingOutlined />} onClick={() => handleShowUser()}>\r\n                        Configuración\r\n                      </Menu.Item>\r\n                      <Menu.Item icon={<ExportOutlined />} onClick={() => exitLogout()}>\r\n                        Cerrar sesión\r\n                      </Menu.Item>\r\n                    </>\r\n                  )} */}\r\n                </Menu>\r\n              ) : (\r\n                <Menu\r\n                  mode=\"inline\"\r\n                  defaultSelectedKeys={[history.location.pathname]}\r\n                  defaultOpenKeys={[history.location.pathname.split('/')[1]]}\r\n                  style={{ height: '100%', borderRight: 0 }}\r\n                  className=\"mainMenu\"\r\n                >\r\n                  <Menu.Item\r\n                    key=\"/general\"\r\n                    icon={<HomeIcon />}\r\n                    onClick={() => history.push('/general')}\r\n                  >\r\n                    General\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    key=\"/procedure\"\r\n                    icon={<MyProceduresIcon />}\r\n                    onClick={() => history.push('/procedurenotarial')}\r\n                  >\r\n                    Trámites\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    key=\"/client\"\r\n                    icon={<TeamIcon />}\r\n                    onClick={() => history.push('/client')}\r\n                  >\r\n                    Clientes\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    key=\"/enterprise\"\r\n                    icon={<EnterpriceIcon />}\r\n                    onClick={() => history.push('/enterprise')}\r\n                  >\r\n                    Empresas\r\n                  </Menu.Item>\r\n\r\n                  <Menu.Item\r\n                    key=\"/notary\"\r\n                    icon={<BankIcon />}\r\n                    onClick={() => history.push('/notary')}\r\n                  >\r\n                    Notarías\r\n                  </Menu.Item>\r\n                  \r\n                  <Menu.Item\r\n                    key=\"/notification\"\r\n                    icon={<NotificationIconWhite />}\r\n                    onClick={() => history.push('/notification')}\r\n                  >\r\n                    Notificaciones\r\n                  </Menu.Item>\r\n                </Menu>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <Menu\r\n              mode=\"inline\"\r\n              //defaultSelectedKeys={[history.location.pathname]}\r\n              //defaultOpenKeys={[history.location.pathname.split('/')[1]]}\r\n              style={{ height: '100%', borderRight: 0 }}\r\n              className=\"mainMenu\"\r\n            >\r\n              <Menu.Item key=\"/\" icon={<HomeIcon />} onClick={() => history.push('/')}>\r\n                Inicio\r\n              </Menu.Item>\r\n            </Menu>\r\n          )}\r\n        </nav>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DrawerMenu\r\n","import React, { useContext } from 'react'\r\nimport { Drawer } from 'antd'\r\n// CONTEXT\r\nimport AuthContext from '../../../../context/AuthContext'\r\n\r\nimport DrawerMenu from './DrawerMenu'\r\n\r\nconst DrawerMobile = ({ openDrawer, setOpenDrawer }) => {\r\n  const onClose = () => {\r\n    setOpenDrawer(false)\r\n  }\r\n\r\n  const { user } = useContext(AuthContext)\r\n\r\n  return (\r\n    <Drawer\r\n      placement={'left'}\r\n      closable={false}\r\n      onClose={onClose}\r\n      open={openDrawer}\r\n      key={'right'}\r\n      className=\"drawerMobile\"\r\n      width={window.screen.width <= 545 ? '100vw' : 360}\r\n    >\r\n      <DrawerMenu user={user} drawerMenu={openDrawer} onClose={onClose} />\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default DrawerMobile\r\n","import React, { useContext, useState } from 'react'\r\nimport AuthContext from '../../../context/AuthContext'\r\nimport Alert from '../../../helpers/alert/Alert'\r\n\r\nimport DrawerMobile from './menu/DrawerMobile'\r\n\r\n//DIALOG\r\nimport UserDialog from '../../../pages/user/components/UserDialog'\r\n\r\n// COOKIE\r\nimport Cookies from 'universal-cookie'\r\nimport HttpClient from '../../../helpers/network/HttpClient'\r\nimport { LogOutIcon, SettingsIcon } from '../../icons/Icons'\r\nimport Notifications from './Notifications'\r\nconst cookies = new Cookies()\r\n\r\nconst Header = ({ user }) => {\r\n  const [openDrawer, setOpenDrawer] = useState(false)\r\n  const [userDialog, setUserDialog] = useState()\r\n  const [isHoveredNotifications, setIsHoveredNotifications] = useState(false)\r\n  const [isHoveredConfig, setIsHoveredConfig] = useState(false)\r\n  const [isHoveredOut, setIsHoveredOut] = useState(false)\r\n  const { updateUser } = useContext(AuthContext)\r\n  const handleMouseOverNotify = () => {\r\n    setIsHoveredNotifications(true)\r\n  }\r\n\r\n  const handleMouseOutNotify = () => {\r\n    setIsHoveredNotifications(false)\r\n  }\r\n\r\n  const handleMouseOverConfig = () => {\r\n    setIsHoveredConfig(true)\r\n  }\r\n\r\n  const handleMouseOutConfig = () => {\r\n    setIsHoveredConfig(false)\r\n  }\r\n\r\n  const handleMouseOverOut = () => {\r\n    setIsHoveredOut(true)\r\n  }\r\n\r\n  const handleMouseOutOut = () => {\r\n    setIsHoveredOut(false)\r\n  }\r\n\r\n  const exitLogout = () => {\r\n    Alert.show({\r\n      type: 'warning',\r\n      title: '',\r\n      message: `¿ Estas seguro de salir ? `,\r\n      btnOk: 'Aceptar',\r\n      fnOk: () => {\r\n        cookies.remove('token')\r\n        localStorage.clear()\r\n        window.location.href = '/login'\r\n      },\r\n      buttonX: true,\r\n      fnCancel: () => { }\r\n    })\r\n  }\r\n\r\n  const handleShowUser = () => {\r\n    setUserDialog(true)\r\n  }\r\n\r\n  const handleCloseUser = () => {\r\n    setUserDialog(false)\r\n  }\r\n\r\n  const callbackUser = async (change) => {\r\n    if (change) {\r\n      Alert.show({\r\n        type: 'warning',\r\n        title: '',\r\n        message: 'Tu información ha sido actualizada con exito.',\r\n        btnOk: 'Aceptar',\r\n        fnOk: async () => {\r\n          await HttpClient.get('/api/user/reload')\r\n          .then((res) => {\r\n            updateUser(res.data)\r\n            if (user.role == 'CLIENTE')\r\n              window.location.href = '/'\r\n            else if (user.role == 'ASESOR LEGAL')\r\n              window.location.href = '/general'\r\n          })\r\n         \r\n        },\r\n        buttonX: true\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UserDialog user={user} data={userDialog} setData={handleCloseUser} callback={callbackUser} />\r\n      <DrawerMobile openDrawer={openDrawer} setOpenDrawer={setOpenDrawer} />\r\n      <header className=\"heaaderHome\">\r\n        <div className=\"responsive-menu cursor-pointer\">\r\n          <img\r\n            src=\"/assets/icon/menu.svg\"\r\n            alt=\"/assets/icon/menu.svg\"\r\n            onClick={() => setOpenDrawer(true)}\r\n          />\r\n        </div>\r\n        <div className=\"info-user-content\">\r\n          <div\r\n            className=\"info-user\"\r\n            style={{ backgroundImage: 'url(/assets/images/background-profile.png)' }}\r\n          >\r\n            {user && user.role === 'CLIENTE' ? (\r\n              <>\r\n                <h3>{'¡Hola, ' + (user && user.first_name) + '!'}</h3>\r\n                <h6>Siempre es bueno tenerte de regreso. ¿Qué haremos hoy?</h6>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <h1>{'Bienvenid@ ' + (user && user.first_name)}</h1>\r\n                <h6>Módulo de Asesoría Legal</h6>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <ul className=\"photo-perfil\">\r\n            <li>\r\n              {user && user.url_image ? (\r\n                <img\r\n                  className=\"profile\"\r\n                  src={process.env.REACT_APP_URL_API + '/api/storage?url=' + user.url_image}\r\n                  alt=\"\"\r\n                />\r\n              ) : (\r\n                <img className=\"profile\" src='/assets/icon/user_4.svg' alt='' />\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"content-config\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"notificacion\" onMouseOver={handleMouseOverNotify} onMouseOut={handleMouseOutNotify}>\r\n                <Notifications />\r\n              </div>\r\n              {isHoveredNotifications && <span className='text-spam'>Notificaciones</span>}\r\n            </li>\r\n            <li>\r\n              <div onClick={() => handleShowUser()} onMouseOver={handleMouseOverConfig} onMouseOut={handleMouseOutConfig}>\r\n                <SettingsIcon />\r\n              </div>\r\n              {isHoveredConfig && <span className='text-spam'>Configura<br></br>tu cuenta</span>}\r\n            </li>\r\n            <li>\r\n              <div onClick={() => exitLogout()} onMouseOver={handleMouseOverOut} onMouseOut={handleMouseOutOut}>\r\n                <LogOutIcon />\r\n              </div>\r\n              {isHoveredOut && <span className='text-spam'>Salir</span>}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useContext, useEffect } from 'react'\r\n//import { getFirebaseToken, onMessageListener } from '../../firebase/config'\r\n// CONTEXT\r\nimport AuthContext from '../../context/AuthContext'\r\nimport { Context } from '../../context/store'\r\n\r\nimport CallMe from '../../components/layout/components/CallMe'\r\nimport CallUs from '../../components/layout/components/Callus'\r\nimport ChatMe from '../../components/layout/components/ChatMe'\r\nimport HelpFloat from '../../pages/home/components/HelpFloat'\r\nimport Loader from '../loader/Loader'\r\nimport Header from './components/Header'\r\nimport DrawerMenu from './components/menu/DrawerMenu'\r\n\r\nimport './scss/layout.scss'\r\n\r\nconst Layout = ({\r\n  children,\r\n  loader = false,\r\n  visible = true,\r\n  hasHeaderProfile = true,\r\n  classNameMain = ''\r\n}) => {\r\n  const { user } = useContext(AuthContext)\r\n  const { state, dispatch } = useContext(Context)\r\n  /* useSession() */\r\n\r\n  const getChat = async () => {\r\n    if (localStorage.getItem('levelKeys') && localStorage.getItem('actualLevel'))\r\n      dispatch({\r\n        type: 'CHAT_ME',\r\n        payload: true\r\n      })\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getChat()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {loader && <Loader type=\"loader\" />}\r\n      <div\r\n        className=\"layout\"\r\n        style={{ backgroundImage: 'url(/assets/images/background-main.png)' }}\r\n      >\r\n        <DrawerMenu user={user} />\r\n        <div className=\"layout-content\">\r\n          {state.call_me && <CallMe />}\r\n          {state.call_us && <CallUs />}\r\n          {state.chat_me && <ChatMe />}\r\n          {visible && user && user.role === 'CLIENTE' && <HelpFloat />}\r\n\r\n          {hasHeaderProfile && (\r\n            <Header user={user} />\r\n          )}\r\n          <main className={classNameMain}>{children}</main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import moment from 'moment'\r\nimport 'moment/locale/es'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport { DeleteOutlined, ExclamationCircleFilled, ExportOutlined } from '@ant-design/icons'\r\nimport { Badge, Dropdown, Popover, Typography } from 'antd'\r\nimport httpClient from '../../../helpers/network/HttpClient'\r\n//import NotificationContext from '../../../context/NotificationsContext'\r\nimport { NotificationIcon } from '../../icons/Icons'\r\n\r\nimport '../scss/notifications.scss'\r\n\r\nconst { Link } = Typography\r\n\r\nconst Notifications = () => {\r\n  //const { notifications, setNotifications } = useContext(NotificationContext)\r\n  const [notifications, setNotifications] = useState([])\r\n\r\n  const PopoverNotification = (\r\n\r\n    <div\r\n      className={notifications && notifications.length > 2 ? 'notifications active-scroll' : 'notifications'}\r\n    >\r\n      {notifications && notifications.map((item, key) => (\r\n        < Dropdown trigger={['contextMenu']} key={key} onClick={() => !item.view && updateNotification(item._id)} >\r\n          <div\r\n            className=\"notification-item\"\r\n            /*style={{ backgroundColor: item.view ? '#ffffff' : '#e1f5fe' }}*/\r\n            >\r\n            {!item.view && <ExclamationCircleFilled className=\"icon-view\" />}\r\n            <div className={item.view ? 'content' : 'content icon-view-active'}>\r\n              <h2 className='title'>\r\n                {item.title}\r\n              </h2>\r\n              <p className='message'>{item.message}</p>\r\n              <p className=\"date\">{moment(item.created_at).locale('es').format('LLL')}</p>\r\n              <div className='container-footer'>\r\n                <DeleteOutlined className=\"btn-delet\" type=\"primary\"  onClick={() => deleteNotification(item._id)}/>\r\n                {item.text && item.text != '' &&\r\n                  <Link href={item.link} className=\"link-go\">\r\n                    {item.text}\r\n                    <ExportOutlined className=\"icon\" />\r\n                  </Link>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dropdown>\r\n      ))\r\n      }\r\n      {!notifications || notifications.length == 0 && (\r\n        <div>\r\n          <h4>No hay notificaciones...</h4>\r\n        </div>\r\n      )}\r\n    </div >\r\n\r\n  )\r\n\r\n  const updateNotification = async (id) => {\r\n    await httpClient.put('/api/notification-new/' + id).then((res) => {\r\n      const clone = [...notifications]\r\n      let list = clone.map((item) => {\r\n        return item._id == id ? { ...item, view: true } : { ...item }\r\n      })\r\n      setNotifications(list)\r\n    })\r\n  }\r\n\r\n  const deleteNotification = async (id) => {\r\n    httpClient.delete('/api/notification-new/' + id).then((res) => {\r\n      const clone = [...notifications]\r\n      const list = clone.filter((item) => item._id != id)\r\n      setNotifications(list)\r\n    })\r\n  }\r\n\r\n  const interval = () => {\r\n    const interval = setInterval(() => {\r\n      loadNotifications()\r\n    }, 5 * 60 * 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }\r\n\r\n  const loadNotifications = async () => {\r\n    console.log('entro')\r\n    await httpClient.get('/api/notification-new')\r\n      .then((res) => {\r\n        if (res.status == 200 && res.data && res.data.length > 0) {\r\n          let count = parseInt(localStorage.getItem('notifications'))\r\n          setNotifications(res.data)\r\n          localStorage.setItem('notifications', (res.data.length).toString())\r\n          if (count && res.data.length > count)\r\n            showNotification()\r\n\r\n        }\r\n      })\r\n      .catch((err) => {\r\n      })\r\n  }\r\n\r\n  const showNotification = () => {\r\n    new Notification('Tus trámites, notificación', {\r\n      body: 'Tienes nuevas notificaciones en nuestra plataforma.'\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadNotifications()\r\n    const cleanupFunction = interval()\r\n    return cleanupFunction\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Popover\r\n        placement=\"bottom\"\r\n        // title={'Notificaciones'}\r\n        content={PopoverNotification}\r\n        trigger=\"click\"\r\n      >\r\n        {/* <Badge dot={notifications.filter((x) => x.view == false).length > 0}> */}\r\n        <Badge dot={notifications && notifications.filter((x) => x.view == false).length > 0}>\r\n          <NotificationIcon />\r\n        </Badge>\r\n      </Popover >\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n"],"sourceRoot":""}