{"version":3,"sources":["components/layout/components/NewProcedure.jsx","pages/date/date.page.js"],"names":["NewProcedure","_ref","title","_jsxs","className","children","_jsx","MoreIcon","Notifications","Date","props","loader","setLoader","useState","notarialact","setNotarialact","category","setCategory","procedureNotarial","setProcedureNotarial","date","setDate","dateAux","setDateAux","schedule","setSchedule","form","Form","useForm","scheduleSelected","setScheduleSelected","isModified","setIsModified","user","useContext","AuthContext","loadSchedule","notary","HttpClient","get","_id","then","res","data","loadCategory","id","cancelDate","a","state","date_appointment","put","Alert","show","type","first_name","message","btnOk","fnOk","history","push","btnCancel","catch","err","useEffect","loadData","dayjs","format","p","queryString","parse","location","search","_res$data","_res$data2","notarialAct","_res$data3","_res$data3$date_appoi","_res$data4","_res$data4$date_appoi","split","hour","setFieldsValue","setTimeout","_Fragment","Layout","hasHeaderProfile","classNameMain","name","address","getFieldValue","labelCol","span","wrapperCol","onFinish","values","onFinishFailed","autoComplete","Item","hasFeedback","rules","required","ConfigProvider","locale","es_ES","Calendar","disabledDate","current","customDate","add","day","fullscreen","defaultValue","onSelect","value","aux","forEach","element","parseInt","schedules","label","Select","placeholder","allowClear","map","i","Button","onClick","fnCancel","htmlType"],"mappings":"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","file":"static/js/27.88834492.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MoreIcon } from '../../icons/Icons'\r\nimport Notifications from './Notifications'\r\n\r\nconst NewProcedure = ({ title = 'Nuevo Trámite' }) => {\r\n  return (\r\n    <div className=\"content-add-tramite\">\r\n      <div className=\"button-nuevo-tramite\">\r\n        <div className=\"centrarVerHor\">\r\n          <MoreIcon />\r\n          <span>{title}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"input-tramite\">\r\n        <div className=\"notificacion-movil\">\r\n          <Notifications />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewProcedure\r\n","import React, { useEffect, useState, useContext } from 'react'\r\n\r\n//COMPONENTS\r\nimport Layout from '../../components/layout/Layout'\r\n\r\n// CONTEXT\r\nimport AuthContext from '../../context/AuthContext'\r\n\r\n//import moment from 'moment'\r\nimport es_ES from 'antd/es/locale/es_ES';\r\nimport { Button, Calendar, Row, Col, Form, Select, ConfigProvider } from 'antd'\r\nimport Alert from '../../helpers/alert/Alert'\r\nimport HttpClient from '../../helpers/network/HttpClient'\r\nimport queryString from 'query-string'\r\nimport dayjs from 'dayjs'\r\nimport 'dayjs/locale/es'\r\nimport NewProcedure from '../../components/layout/components/NewProcedure'\r\n\r\nimport './scss/date.page.scss'\r\n\r\nconst Date = (props) => {\r\n  const [loader, setLoader] = useState(false)\r\n  const [notarialact, setNotarialact] = useState()\r\n  const [category, setCategory] = useState()\r\n  const [procedureNotarial, setProcedureNotarial] = useState()\r\n  const [date, setDate] = useState(null)\r\n  const [dateAux, setDateAux] = useState(null)\r\n  const [schedule, setSchedule] = useState([])\r\n  const [form] = Form.useForm()\r\n  const [scheduleSelected, setScheduleSelected] = useState([])\r\n  const [isModified, setIsModified] = useState(false)\r\n  const { user } = useContext(AuthContext)\r\n\r\n  const loadData = () => {\r\n    let a = dayjs().format('YYYY/MM/DD')\r\n    setDate(a)\r\n    setDateAux(a)\r\n    let { p } = queryString.parse(props.location.search)\r\n    if (p) {\r\n      HttpClient.get('/api/procedurenotarial/one/' + p).then((res) => {\r\n        setProcedureNotarial(res.data)\r\n        setNotarialact(res.data.notarialAct)\r\n        loadCategory(res.data.notarialAct.category)\r\n        loadSchedule(res.data.notary)\r\n\r\n        if (res?.data?.state === '12' || res?.data?.state === '14') {\r\n          setIsModified(true)\r\n          setDateAux(dayjs(res?.data?.date_appointment?.split(' ')[0]).format('YYYY-MM-DD'))\r\n          let data = { hour: res?.data?.date_appointment?.split(' ')[1] }\r\n          form.setFieldsValue(data)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const loadSchedule = (notary) => {\r\n    HttpClient.get('/api/notary/schedule/' + notary._id).then((res) => {\r\n      setSchedule(res.data)\r\n    })\r\n  }\r\n\r\n  const loadCategory = (id) => {\r\n    HttpClient.get('/api/category/' + id).then((res) => {\r\n      setCategory(res.data)\r\n    })\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    procedureNotarial.date_appointment = date + ' ' + values.hour\r\n    if (isModified) procedureNotarial.state = '14'\r\n    else procedureNotarial.state = '12'\r\n\r\n    if (date && values.hour) {\r\n      HttpClient.put('/api/procedurenotarial/' + procedureNotarial._id, procedureNotarial)\r\n        .then((res) => {\r\n          Alert.show({\r\n            type: 'success',\r\n            title: !isModified ? 'Exito' : '¡' + user.first_name + ' tú cita ha sido modificada!',\r\n            message: !isModified\r\n              ? `¡Tú cita preferencial está agendada!\\n `\r\n              : `` +\r\n                `Dia: ` +\r\n                date +\r\n                `\\n ` +\r\n                `Hora: ` +\r\n                values.hour +\r\n                `\\n ` +\r\n                `Notaría: ` +\r\n                procedureNotarial.notary.name +\r\n                ` \\n` +\r\n                `Dirección: ` +\r\n                procedureNotarial.notary.address +\r\n                ` \\n` +\r\n                `Gracias por confiar en nosotros.`,\r\n            btnOk: 'Aceptar',\r\n            fnOk: () => {\r\n              props.history.push('/procedurenotarial')\r\n            },\r\n            btnCancel: 'Cancelar'\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          Alert.show({\r\n            type: 'error',\r\n            title: 'Error inesperado',\r\n            message: 'Ocurrio un error inesperado, vuelve a intentar',\r\n            btnOk: 'Aceptar',\r\n            fnOk: () => {},\r\n            btnCancel: 'Cancelar'\r\n          })\r\n        })\r\n    } else {\r\n      Alert.show({\r\n        type: 'error',\r\n        title: 'Información',\r\n        message: 'Por favor selecciona el día y la hora de tu cita.',\r\n        btnOk: 'Aceptar',\r\n        fnOk: () => {},\r\n        btnCancel: 'Cancelar'\r\n      })\r\n    }\r\n  }\r\n\r\n  const onFinishFailed = () => {}\r\n\r\n  const onSelect = (value) => {\r\n    setDate(dayjs(value).format('YYYY-MM-DD'))\r\n    var aux = []\r\n    schedule.forEach((element) => {\r\n      if (parseInt(element.day) === parseInt(value.day())) {\r\n        element.schedule.schedules.forEach((schedule) => {\r\n          aux.push(schedule)\r\n        })\r\n      }\r\n    })\r\n\r\n    setScheduleSelected(aux)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    if (isModified) {\r\n      Alert.show({\r\n        type: 'warning',\r\n        title: 'Confirmación',\r\n        message: '¿Esta seguro de cancelar su cita?.',\r\n        btnOk: 'Aceptar',\r\n        fnOk: () => {\r\n          cancelDate()\r\n        },\r\n        btnCancel: 'Cancelar',\r\n        fnCancel: () => {}\r\n      })\r\n    } else {\r\n      props.history.push('/procedurenotarial')\r\n    }\r\n  }\r\n\r\n  const cancelDate = () => {\r\n    var a = { ...procedureNotarial }\r\n    a.state = '13'\r\n    delete a.date_appointment\r\n    HttpClient.put('/api/procedurenotarial/' + a._id, a)\r\n      .then((res) => {\r\n        Alert.show({\r\n          type: 'success',\r\n          title: '¡' + user.first_name + ' tú cita ha quedado cancelada!',\r\n          message: `Cuando tengas la nueva fecha confirmada para ir a Notaria, ve a la opción Mis Trámites, buscas tu trámite y accedes en el botón Ver de la opción Reagendar cita.`,\r\n          btnOk: 'Aceptar',\r\n          fnOk: () => {\r\n            props.history.push('/procedurenotarial')\r\n          },\r\n          btnCancel: 'Cancelar'\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        Alert.show({\r\n          type: 'error',\r\n          title: 'Error inesperado',\r\n          message: 'Ocurrio un error inesperado, vuelve a intentar',\r\n          btnOk: 'Aceptar',\r\n          fnOk: () => {},\r\n          btnCancel: 'Cancelar'\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData()\r\n    setTimeout(() => {\r\n      setLoader(false)\r\n    }, 1000)\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Layout loader={loader} hasHeaderProfile={true} classNameMain=\"dateMain\">\r\n        <NewProcedure />\r\n        <h3 className=\"title-indicaciones\">{category && category.name + ' /'}</h3>\r\n        <div className=\"line-morado\"> </div>\r\n        <h2 className=\"title-indicaciones\">{notarialact && notarialact.name}</h2>\r\n        <div className=\"diplayflex\">\r\n          <div className=\"content-circule\">\r\n            <div className=\"circule-notaria\">\r\n              <span className=\"circule-number\">4</span>\r\n            </div>\r\n          </div>\r\n          <h2 className=\"titleIngresarInfo\">\r\n            {isModified ? 'Modifica tu cita' : 'Agenda tu cita'}\r\n          </h2>\r\n        </div>\r\n        <br />\r\n        <p className=\"display-linebreak\">\r\n          {!isModified\r\n            ? `¡Tu trámite ya está listo! \\n\r\n                                Selecciona el día y la hora para reclamar tu documento en Notaría con una cita preferencial.`\r\n            : 'Datos de tu cita. \\n\\n' +\r\n              procedureNotarial.notary.name +\r\n              ` \\n` +\r\n              procedureNotarial.notary.address +\r\n              `\\n` +\r\n              `Fecha: ` +\r\n              dateAux+\r\n              `\\n` +\r\n              `Hora: ` +\r\n              form.getFieldValue('hour') +\r\n              `\\n\\n\\n` +\r\n              `Si deseas cambiar el día de tu cita, selecciona la nueva fecha en el siguiente calendario. A continuación, escoge la hora en la que deseas asistir y presiona el botón Modificar.\\n \r\n                            Si no tienes definida la fecha en la que vas a asistir, puedes oprimir el botón Cancelar cita y programarla después.`}\r\n        </p>\r\n        <Form\r\n          name=\"basic\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 24 }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n          form={form}\r\n        >\r\n          <Form.Item\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Por favor seleccionada la hora de tu cita'\r\n              }\r\n            ]}\r\n            className=\"calendarItem\"\r\n          >\r\n             <ConfigProvider locale={es_ES}>\r\n            <Calendar\r\n              name=\"date\"\r\n              disabledDate={(current) => {\r\n                let customDate = dayjs().format('YYYY-MM-DD')\r\n                return (\r\n                  (current && current.format('YYYY-MM-DD') < customDate) ||\r\n                  current.format('YYYY-MM-DD') >\r\n                    dayjs(customDate).add(1, 'M').format('YYYY-MM-DD') ||\r\n                  current.day() === 0\r\n                )\r\n              }}\r\n              fullscreen={false}\r\n              defaultValue={dayjs()}\r\n              format={'YYYY-MM-DD'}\r\n              onSelect={onSelect}\r\n            />\r\n            </ConfigProvider>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Hora:\"\r\n            name=\"hour\"\r\n            id=\"hour\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'La Hora es requerida'\r\n              }\r\n            ]}\r\n            className=\"selectHour\"\r\n          >\r\n            <Select placeholder=\"Seleccione la hora\" allowClear>\r\n              {scheduleSelected.map((hour, i) => (\r\n                <option key={i} value={hour}>\r\n                  {hour}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <h6 className=\"titleIngresarInfo\">\r\n            NOTA:\r\n            <span className=\"titleIngresarInfo-rest\">\r\n              {!isModified\r\n                ? 'Recuerda que debes presentar los documentos originales o copias certificadas ante el Notario en el momento de la cita.'\r\n                : ` Para modificar o cancelar tu cita, recuerda que puedes hacerlo con un mínimo de 8 horas de anticipación. De lo contrario, ya no te aparecerá habilitada la opción de cambiarla.`}\r\n            </span>\r\n          </h6>\r\n\r\n          <div className=\"containerButtons\">\r\n            <Form.Item>\r\n              <Button type=\"primary\" className=\"btnSave\" onClick={() => handleClose()}>\r\n                {!isModified ? 'Cerrar' : 'Cancelar cita'}\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"btnContinuar\">\r\n                {!isModified ? 'Agendar' : 'Modificar'}\r\n              </Button>\r\n            </Form.Item>\r\n          </div>\r\n        </Form>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Date\r\n"],"sourceRoot":""}