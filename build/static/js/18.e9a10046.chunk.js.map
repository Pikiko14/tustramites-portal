{"version":3,"sources":["components/layout/components/NewProcedure.jsx","components/table/DataTable.js","components/table/ActionTable.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EyeOutlined.js","pages/client/components/ClientDialog.js","pages/client/client.page.js"],"names":["NewProcedure","_ref","title","_jsxs","className","children","_jsx","MoreIcon","Notifications","DataTable","columns","data","pagination","Table","dataSource","ActionTable","handleSee","handleEdit","handleDelete","Space","size","onClick","EyeOutlined","EditOutlined","DeleteOutlined","props","ref","React","AntdIcon","_objectSpread","icon","EditOutlinedSvg","RefIcon","EyeOutlinedSvg","ClientDialog","user","setData","callback","form","Form","useForm","files","setFiles","useState","handleOk","handleCancel","useEffect","resetFields","first_name","last_name","email","role","setFieldsValue","url_image","urlFile","process","REACT_APP_URL_API","uid","name","status","url","thumbUrl","Modal","open","onOk","onCancel","forceRender","maskClosable","closeIcon","CloseOutlined","footer","Button","type","layout","ImgCrop","rotate","aspect","modalTitle","disabled","Upload","listType","fileList","defaultFileList","onChange","file","length","Item","label","id","Input","Client","users","setUsers","loader","setLoader","setUser","userDialog","setUserDialog","dataIndex","key","render","text","record","getClients","async","response","httpClient","get","setTimeout","_Fragment","Layout","classNameMain","position"],"mappings":"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","file":"static/js/18.e9a10046.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MoreIcon } from '../../icons/Icons'\r\nimport Notifications from './Notifications'\r\n\r\nconst NewProcedure = ({ title = 'Nuevo TrÃ¡mite' }) => {\r\n  return (\r\n    <div className=\"content-add-tramite\">\r\n      <div className=\"button-nuevo-tramite\">\r\n        <div className=\"centrarVerHor\">\r\n          <MoreIcon />\r\n          <span>{title}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"input-tramite\">\r\n        <div className=\"notificacion-movil\">\r\n          <Notifications />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewProcedure\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nconst DataTable = ({ columns, data, pagination }) => {\r\n  return <Table columns={columns} dataSource={data} pagination={pagination} />\r\n}\r\n\r\nexport default DataTable\r\n","import React from 'react'\r\nimport { Space } from 'antd'\r\n\r\n// ICON\r\nimport { EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons'\r\n\r\nconst ActionTable = ({ handleSee, handleEdit, handleDelete }) => {\r\n  return (\r\n    <Space size=\"middle\">\r\n      {handleSee ? (\r\n        <span className=\"action-edit\" onClick={handleSee}>\r\n          <EyeOutlined />\r\n          Ver\r\n        </span>\r\n      ) : null}\r\n      {handleEdit ? (\r\n        <span className=\"action-edit\" onClick={handleEdit}>\r\n          <EditOutlined />\r\n          Editar\r\n        </span>\r\n      ) : null}\r\n      {handleDelete ? (\r\n        <span className=\"action-edit\" onClick={handleDelete}>\r\n          <DeleteOutlined />\r\n          Eliminar\r\n        </span>\r\n      ) : null}\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default ActionTable\r\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(EditOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'EditOutlined';\n}\nexport default RefIcon;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EyeOutlined = function EyeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(EyeOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'EyeOutlined';\n}\nexport default RefIcon;","import React, { useState, useEffect } from 'react'\r\nimport { Modal } from 'antd'\r\n\r\nimport { Form, Input, Button, Select, Upload } from 'antd'\r\nimport ImgCrop from 'antd-img-crop'\r\nimport './scss/ClientDialog.scss'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\n\r\nconst ClientDialog = ({ user, data, setData, callback }) => {\r\n  const [form] = Form.useForm()\r\n  const [files, setFiles] = useState([])\r\n\r\n  const onChange = (file) => {\r\n    setFiles(file.fileList)\r\n  }\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file.originFileObj)\r\n        reader.onload = () => resolve(reader.result)\r\n      })\r\n    }\r\n    const image = new Image()\r\n    image.src = src\r\n    const imgWindow = window.open(src)\r\n    imgWindow.document.write(image.outerHTML)\r\n  }\r\n\r\n  const handleOk = () => {\r\n    setData(null)\r\n    callback()\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setData(null)\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n    if (user) {\r\n      let data = {\r\n        first_name: user.first_name,\r\n        last_name: user.last_name,\r\n        email: user.email,\r\n        role: user.role\r\n      }\r\n      form.setFieldsValue(data)\r\n      if (user.url_image) {\r\n        let urlFile = process.env.REACT_APP_URL_API + '/api/storage?url=' + user.url_image\r\n        setFiles([\r\n          {\r\n            uid: '-1',\r\n            name: 'load.png',\r\n            status: 'done',\r\n            url: urlFile,\r\n            thumbUrl: urlFile\r\n          }\r\n        ])\r\n      }\r\n    }\r\n  }, [user, data])\r\n\r\n  return (\r\n    <Modal\r\n      open={data}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      forceRender\r\n      maskClosable={false}\r\n      closeIcon={\r\n        <span className=\"containerButtonX\" onClick={handleCancel}>\r\n          <CloseOutlined />\r\n        </span>}\r\n      footer={[\r\n        <Button className='btnContinuar' key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n          Aceptar\r\n        </Button>\r\n      ]}\r\n    >\r\n      <h3>InformaciÃ³n del cliente</h3>\r\n      <Form layout=\"vertical\" form={form}>\r\n        <div className=\"form-control\">\r\n\r\n          <ImgCrop className=\"picture\" rotate={false} aspect={50 / 50} modalTitle={'Editar Imagen'} disabled={true}>\r\n            <Upload\r\n              listType=\"picture-card\"\r\n              fileList={files}\r\n              defaultFileList={[...files]}\r\n              onChange={onChange}\r\n              disabled={true}\r\n            >\r\n              {files.length == 0 && 'Picture'}\r\n            </Upload>\r\n          </ImgCrop>\r\n          <Form.Item\r\n            label=\"Nombre(s)\"\r\n            name=\"first_name\"\r\n            id=\"first_name\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Apellidos\"\r\n            name=\"last_name\"\r\n            id=\"last_name\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Correo\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"role\"\r\n            id=\"role\"\r\n            label=\"Rol\"\r\n          >\r\n            <Input disabled={true} />\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClientDialog\r\n","import React, { useState, useEffect } from 'react'\r\nimport httpClient from '../../helpers/network/HttpClient'\r\nimport Layout from '../../components/layout/Layout'\r\nimport DataTable from '../../components/table/DataTable'\r\nimport ActionTable from '../../components/table/ActionTable'\r\nimport ClientDialog from './components/ClientDialog'\r\nimport '../procedurenotarial/scss/procedurenotarial.page.scss'\r\nimport NewProcedure from '../../components/layout/components/NewProcedure'\r\n\r\nconst Client = () => {\r\n  const [users, setUsers] = useState([])\r\n  const [loader, setLoader] = useState(false)\r\n  const [user, setUser] = useState()\r\n  const [userDialog, setUserDialog] = useState()\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre(s)',\r\n      dataIndex: 'first_name',\r\n      key: 'first_name',\r\n      render: (text) => <span>{text}</span>\r\n    },\r\n    {\r\n      title: 'Apellidos',\r\n      dataIndex: 'last_name',\r\n      key: 'last_name',\r\n      render: (text) => <span>{text}</span>\r\n    },\r\n    {\r\n      title: 'Correo',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      render: (text) => <span>{text}</span>\r\n    },\r\n    {\r\n      title: 'Rol',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: (text) => <span>{text}</span>\r\n    },\r\n    {\r\n      title: 'AcciÃ³n',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      render: (text, record) => <ActionTable handleSee={() => handleSee(record)} />\r\n    }\r\n  ]\r\n\r\n  const getClients = async () => {\r\n    const response = await httpClient.get('/api/user/client/all?type=0')\r\n    if (response.status === 200) {\r\n      setUsers(response.data)\r\n    }\r\n  }\r\n\r\n  const handleSee = (user) => {\r\n    setUser(user)\r\n    setUserDialog({ user })\r\n  }\r\n\r\n  const callbackUser = (id) => {\r\n    getClients()\r\n    setUserDialog(null)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getClients()\r\n    setLoader(true)\r\n    setTimeout(() => {\r\n      setLoader(false)\r\n    }, 3000)\r\n  }, [])\r\n  return (\r\n    <>\r\n      <ClientDialog user={user} data={userDialog} setData={setUserDialog} callback={callbackUser} />\r\n      <Layout loader={loader} classNameMain=\"mainTable\">\r\n        <NewProcedure title='Clientes' />\r\n        <div className=\"header-page\">\r\n          <h6>A continuaciÃ³n encontrarÃ¡s todos los clientes</h6>\r\n          <div className=\"main-card card\">\r\n            <div className=\"main-card-table\">\r\n              <DataTable\r\n                columns={columns}\r\n                data={users}\r\n                pagination={{ position: ['bottomCenter'] }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Client\r\n"],"sourceRoot":""}