{"version":3,"sources":["pages/user/restartpassword.page.js"],"names":["cookies","Cookies","RestartPassword","props","form","Form","useForm","history","useHistory","redirect","remove","window","location","href","_jsx","className","style","backgroundImage","children","_jsxs","onClick","push","ArrowLeftWithoutLine","src","layout","onFinish","async","answer","validatePassword","password","getFieldValue","test","HttpClient","post","values","then","res","console","log","Alert","show","type","title","message","btnOk","fnOk","btnCancel","buttonX","catch","err","Item","name","id","label","hasFeedback","rules","required","min","max","Input","Password","placeholder","Button","htmlType"],"mappings":"uKAAA,kGAUA,MAAMA,EAAU,IAAIC,IAoLLC,UAlLUC,IACvB,MAAOC,GAAQC,IAAKC,UACdC,EAAUC,cAgEVC,EAAWA,KACfT,EAAQU,OAAO,SACfC,OAAOC,SAASC,KAAO,QAAQ,EAGjC,OACEC,cAAA,OACEC,UAAU,UACVC,MAAO,CAAEC,gBAAiB,4CAA6CC,SAEvEC,eAAA,OAAKJ,UAAU,kBAAiBG,SAAA,CAC9BJ,cAAA,OAAKC,UAAU,gBAAgBK,QAASA,IAAMb,EAAQc,KAAK,KAAKH,SAC9DJ,cAACQ,IAAoB,MAEvBH,eAAA,OAAKJ,UAAU,oBAAmBG,SAAA,CAChCC,eAAA,OAAKJ,UAAU,eAAcG,SAAA,CAC3BJ,cAAA,MAAIC,UAAU,QAAOG,SAAC,+BAEtBJ,cAAA,OAAKC,UAAU,aAAaQ,IAAI,mCAElCT,cAAA,OAAKC,UAAU,cAAaG,SAC1BC,eAACd,IAAI,CAACmB,OAAO,WAAWpB,KAAMA,EAAMqB,SAnE7BC,UACf,IAAIC,EAjBmBC,MACvB,IAAIC,EAAWzB,EAAK0B,cAAc,eAElC,OAAID,IADkBzB,EAAK0B,cAAc,gBAEhC,EAIP,+GACgBC,KAAKF,GAIhB,EAHE,CAGD,EAIKD,GACb,GAAe,IAAXD,QACIK,IAAWC,KAAK,8BAA+BC,GAClDC,MAAMC,IACLC,QAAQC,IAAIF,GACZG,IAAMC,KAAK,CACTC,KAAM,UACNC,MAAO,GACPC,QACE,2GACFC,MAAO,UACPC,KAAMA,IAAMpC,IACZqC,UAAW,WACXC,SAAS,GACT,IAEHC,OAAOC,IACNV,IAAMC,KAAK,CACTC,KAAM,QACNC,MAAO,GACPC,QACE,6IACFC,MAAO,UACPC,KAAMA,OACNC,UAAW,WACXC,SAAS,GACT,QAED,CACL,IAAIJ,EAAU,GACGA,EAAH,GAAVhB,EAAuB,4DAGvB,qLAEJY,IAAMC,KAAK,CACTC,KAAM,QACNC,MAAO,SACPC,QAASA,EACTC,MAAO,UACPC,KAAMA,OACNC,UAAW,YAEf,GAuB+D5B,SAAA,CACrDJ,cAAA,KAAGC,UAAU,WAAUG,SAAC,kCACxBC,eAAA,OAAKJ,UAAU,eAAcG,SAAA,CAC3BJ,cAACT,IAAK6C,KAAI,CACRC,KAAK,WACLC,GAAG,WACHC,MAAM,wBACNC,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,EACVb,QAAS,6CAEX,CACEc,IAAK,EACLd,QAAS,sDAEX,CACEe,IAAK,GACLf,QAAS,wDAEXzB,SAEFJ,cAAC6C,IAAMC,SAAQ,CAACnB,KAAK,WAAWoB,YAAY,2BAG9C/C,cAACT,IAAK6C,KAAI,CACRC,KAAK,cACLC,GAAG,cACHC,MAAM,uBACNC,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,EACVb,QAAS,4CAEX,CACEc,IAAK,EACLd,QAAS,4DAEX,CACEe,IAAK,GACLf,QAAS,wDAEXzB,SAEFJ,cAAC6C,IAAMC,SAAQ,CAACnB,KAAK,WAAWoB,YAAY,0BAG9C/C,cAACT,IAAK6C,KAAI,CACRC,KAAK,eACLC,GAAG,eACHC,MAAM,iCACNC,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,EACVb,QAAS,6CAEX,CACEc,IAAK,EACLd,QAAS,4DAEX,CACEe,IAAK,GACLf,QAAS,wDAEXzB,SAEFJ,cAAC6C,IAAMC,SAAQ,CAACnB,KAAK,WAAWoB,YAAY,8BAE9C/C,cAAA,OAAKC,UAAU,kBAAiBG,SAC9BJ,cAACgD,IAAM,CAAC/C,UAAU,oBAAoBgD,SAAS,SAAQ7C,SAAC,6BAehE,C","file":"static/js/31.5ecdc529.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport HttpClient from '../../helpers/network/HttpClient'\r\nimport Alert from '../../helpers/alert/Alert'\r\nimport './scss/restartpassword.page.scss'\r\nimport { ArrowLeftWithoutLine, LogoTTV } from '../../components/icons/Icons'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// COOKIE\r\nimport Cookies from 'universal-cookie'\r\nconst cookies = new Cookies()\r\n\r\nconst RestartPassword = (props) => {\r\n  const [form] = Form.useForm()\r\n  const history = useHistory()\r\n\r\n  const validatePassword = () => {\r\n    let password = form.getFieldValue('passwordNew')\r\n    let password_repeat = form.getFieldValue('passwordNew2')\r\n    if (password !== password_repeat) {\r\n      return 1\r\n    }\r\n\r\n    let regexPattern =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@!$%^&*()\\-_=+{}[\\]:;<>|./?])[A-Za-z\\d@!$%^&*()\\-_=+{}[\\]:;<>|./?]{8,}$/\r\n    if (!regexPattern.test(password)) {\r\n      return 2\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    let answer = validatePassword()\r\n    if (answer === 0) {\r\n      await HttpClient.post('/api/remember/restart/login', values)\r\n        .then((res) => {\r\n          console.log(res)\r\n          Alert.show({\r\n            type: 'success',\r\n            title: '',\r\n            message:\r\n              'Tu contraseña fue actualizada con éxito. \\nPor favor ingresa de nuevo, con tu nueva contraseña.',\r\n            btnOk: 'Aceptar',\r\n            fnOk: () => redirect(),\r\n            btnCancel: 'Cancelar',\r\n            buttonX: true\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          Alert.show({\r\n            type: 'error',\r\n            title: '',\r\n            message:\r\n              'La contraseña actual que ingresaste no coincide con la que tenemos almacenada.\\nPor favor valida tu información y vuelve a intentar.',\r\n            btnOk: 'Aceptar',\r\n            fnOk: () => {},\r\n            btnCancel: 'Cancelar',\r\n            buttonX: true\r\n          })\r\n        })\r\n    } else {\r\n      let message = ''\r\n      if (answer == 1) message = 'Tus nuevas contraseñas no coinciden, vuelve a intentar'\r\n      else\r\n        message =\r\n          'Tu nueva contraseña parece no ser del todo segura.\\nPara crear una contraseña segura, te recomendamos incluir números, símbolos y letras mayúsculas y minúsculas'\r\n\r\n      Alert.show({\r\n        type: 'error',\r\n        title: 'Error ',\r\n        message: message,\r\n        btnOk: 'Aceptar',\r\n        fnOk: () => {},\r\n        btnCancel: 'Cancelar'\r\n      })\r\n    }\r\n  }\r\n  const redirect = () => {\r\n    cookies.remove('token')\r\n    window.location.href = '/login'\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"restart\"\r\n      style={{ backgroundImage: 'url(/assets/images/background-login.svg)' }}\r\n    >\r\n      <div className=\"restart-content\">\r\n        <div className=\"register-back\" onClick={() => history.push('/')}>\r\n          <ArrowLeftWithoutLine />\r\n        </div>\r\n        <div className=\"login-sub-content\">\r\n          <div className=\"login-header\">\r\n            <h3 className=\"title\">Reestablecer contraseña</h3>\r\n            {/* <LogoTTV /> */}\r\n            <img className='image-icon' src='/assets/icon/logo-color.svg' />\r\n          </div>\r\n          <div className=\"login-panel\">\r\n            <Form layout=\"vertical\" form={form} onFinish={onFinish}>\r\n              <p className=\"subtitle\">Ingresa los datos solicitados</p>\r\n              <div className=\"form-control\">\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  label=\"Contraseña actual:\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Por favor ingresa tu contraseña actual'\r\n                    },\r\n                    {\r\n                      min: 8,\r\n                      message: 'Tu contraseña debe tener mínimo 8 caracteres'\r\n                    },\r\n                    {\r\n                      max: 15,\r\n                      message: 'Tu contraseña debe tener máximo 15 caracteres'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input.Password type=\"password\" placeholder=\"Contraseña actual\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"passwordNew\"\r\n                  id=\"passwordNew\"\r\n                  label=\"Nueva contraseña:\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Por favor ingresa tu nueva contraseña'\r\n                    },\r\n                    {\r\n                      min: 8,\r\n                      message: 'Tu nueva contraseña debe tener mínimo 8 caracteres'\r\n                    },\r\n                    {\r\n                      max: 15,\r\n                      message: 'Tu contraseña debe tener máximo 15 caracteres'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input.Password type=\"password\" placeholder=\"Nueva contraseña\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"passwordNew2\"\r\n                  id=\"passwordNew2\"\r\n                  label=\"Repite tu nueva contraseña:\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Por favor ingresa tu nueva contraseña!'\r\n                    },\r\n                    {\r\n                      min: 8,\r\n                      message: 'Tu nueva contraseña debe tener mínimo 8 caracteres'\r\n                    },\r\n                    {\r\n                      max: 15,\r\n                      message: 'Tu contraseña debe tener máximo 15 caracteres'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input.Password type=\"password\" placeholder=\"Repite tu contraseña\" />\r\n                </Form.Item>\r\n                <div className=\"containerButton\">\r\n                  <Button className=\"form-action-login\" htmlType=\"submit\">\r\n                    Guardar\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n\r\n            {/*<div className=\"autor\">\r\n                            <p>Power By <img src=\"/assets/images/tingenio.png\" alt=\"/assets/images/tingenio.png\"></img></p>\r\n                            <p>&copy; Todos los derechos reservados.</p>\r\n                            <p>Colombia 2021</p>\r\n                        </div>*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RestartPassword\r\n"],"sourceRoot":""}